// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: materials.proto

package au.id.katharos.robominions.api;

public final class Materials {
  private Materials() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MaterialOrBuilder extends
      // @@protoc_insertion_point(interface_extends:robominions.Material)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .robominions.Material.Type type = 1 [default = AIR];</code>
     */
    boolean hasType();
    /**
     * <code>optional .robominions.Material.Type type = 1 [default = AIR];</code>
     */
    au.id.katharos.robominions.api.Materials.Material.Type getType();
  }
  /**
   * Protobuf type {@code robominions.Material}
   */
  public static final class Material extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:robominions.Material)
      MaterialOrBuilder {
    // Use Material.newBuilder() to construct.
    private Material(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Material(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Material defaultInstance;
    public static Material getDefaultInstance() {
      return defaultInstance;
    }

    public Material getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Material(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              au.id.katharos.robominions.api.Materials.Material.Type value = au.id.katharos.robominions.api.Materials.Material.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return au.id.katharos.robominions.api.Materials.internal_static_robominions_Material_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return au.id.katharos.robominions.api.Materials.internal_static_robominions_Material_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              au.id.katharos.robominions.api.Materials.Material.class, au.id.katharos.robominions.api.Materials.Material.Builder.class);
    }

    public static com.google.protobuf.Parser<Material> PARSER =
        new com.google.protobuf.AbstractParser<Material>() {
      public Material parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Material(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Material> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code robominions.Material.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>AIR = 0;</code>
       */
      AIR(0, 0),
      /**
       * <code>STONE = 1;</code>
       */
      STONE(1, 1),
      /**
       * <code>GRASS = 2;</code>
       */
      GRASS(2, 2),
      /**
       * <code>DIRT = 3;</code>
       */
      DIRT(3, 3),
      /**
       * <code>COBBLESTONE = 4;</code>
       */
      COBBLESTONE(4, 4),
      /**
       * <code>WOOD = 5;</code>
       */
      WOOD(5, 5),
      /**
       * <code>SAPLING = 6;</code>
       */
      SAPLING(6, 6),
      /**
       * <code>BEDROCK = 7;</code>
       */
      BEDROCK(7, 7),
      /**
       * <code>WATER = 8;</code>
       */
      WATER(8, 8),
      /**
       * <code>STATIONARY_WATER = 9;</code>
       */
      STATIONARY_WATER(9, 9),
      /**
       * <code>LAVA = 10;</code>
       */
      LAVA(10, 10),
      /**
       * <code>STATIONARY_LAVA = 11;</code>
       */
      STATIONARY_LAVA(11, 11),
      /**
       * <code>SAND = 12;</code>
       */
      SAND(12, 12),
      /**
       * <code>GRAVEL = 13;</code>
       */
      GRAVEL(13, 13),
      /**
       * <code>GOLD_ORE = 14;</code>
       */
      GOLD_ORE(14, 14),
      /**
       * <code>IRON_ORE = 15;</code>
       */
      IRON_ORE(15, 15),
      /**
       * <code>COAL_ORE = 16;</code>
       */
      COAL_ORE(16, 16),
      /**
       * <code>LOG = 17;</code>
       */
      LOG(17, 17),
      /**
       * <code>LEAVES = 18;</code>
       */
      LEAVES(18, 18),
      /**
       * <code>SPONGE = 19;</code>
       */
      SPONGE(19, 19),
      /**
       * <code>GLASS = 20;</code>
       */
      GLASS(20, 20),
      /**
       * <code>LAPIS_ORE = 21;</code>
       */
      LAPIS_ORE(21, 21),
      /**
       * <code>LAPIS_BLOCK = 22;</code>
       */
      LAPIS_BLOCK(22, 22),
      /**
       * <code>DISPENSER = 23;</code>
       */
      DISPENSER(23, 23),
      /**
       * <code>SANDSTONE = 24;</code>
       */
      SANDSTONE(24, 24),
      /**
       * <code>NOTE_BLOCK = 25;</code>
       */
      NOTE_BLOCK(25, 25),
      /**
       * <code>BED_BLOCK = 26;</code>
       */
      BED_BLOCK(26, 26),
      /**
       * <code>POWERED_RAIL = 27;</code>
       */
      POWERED_RAIL(27, 27),
      /**
       * <code>DETECTOR_RAIL = 28;</code>
       */
      DETECTOR_RAIL(28, 28),
      /**
       * <code>PISTON_STICKY_BASE = 29;</code>
       */
      PISTON_STICKY_BASE(29, 29),
      /**
       * <code>WEB = 30;</code>
       */
      WEB(30, 30),
      /**
       * <code>LONG_GRASS = 31;</code>
       */
      LONG_GRASS(31, 31),
      /**
       * <code>DEAD_BUSH = 32;</code>
       */
      DEAD_BUSH(32, 32),
      /**
       * <code>PISTON_BASE = 33;</code>
       */
      PISTON_BASE(33, 33),
      /**
       * <code>PISTON_EXTENSION = 34;</code>
       */
      PISTON_EXTENSION(34, 34),
      /**
       * <code>WOOL = 35;</code>
       */
      WOOL(35, 35),
      /**
       * <code>PISTON_MOVING_PIECE = 36;</code>
       */
      PISTON_MOVING_PIECE(36, 36),
      /**
       * <code>YELLOW_FLOWER = 37;</code>
       */
      YELLOW_FLOWER(37, 37),
      /**
       * <code>RED_ROSE = 38;</code>
       */
      RED_ROSE(38, 38),
      /**
       * <code>BROWN_MUSHROOM = 39;</code>
       */
      BROWN_MUSHROOM(39, 39),
      /**
       * <code>RED_MUSHROOM = 40;</code>
       */
      RED_MUSHROOM(40, 40),
      /**
       * <code>GOLD_BLOCK = 41;</code>
       */
      GOLD_BLOCK(41, 41),
      /**
       * <code>IRON_BLOCK = 42;</code>
       */
      IRON_BLOCK(42, 42),
      /**
       * <code>DOUBLE_STEP = 43;</code>
       */
      DOUBLE_STEP(43, 43),
      /**
       * <code>STEP = 44;</code>
       */
      STEP(44, 44),
      /**
       * <code>BRICK = 45;</code>
       */
      BRICK(45, 45),
      /**
       * <code>TNT = 46;</code>
       */
      TNT(46, 46),
      /**
       * <code>BOOKSHELF = 47;</code>
       */
      BOOKSHELF(47, 47),
      /**
       * <code>MOSSY_COBBLESTONE = 48;</code>
       */
      MOSSY_COBBLESTONE(48, 48),
      /**
       * <code>OBSIDIAN = 49;</code>
       */
      OBSIDIAN(49, 49),
      /**
       * <code>TORCH = 50;</code>
       */
      TORCH(50, 50),
      /**
       * <code>FIRE = 51;</code>
       */
      FIRE(51, 51),
      /**
       * <code>MOB_SPAWNER = 52;</code>
       */
      MOB_SPAWNER(52, 52),
      /**
       * <code>WOOD_STAIRS = 53;</code>
       */
      WOOD_STAIRS(53, 53),
      /**
       * <code>CHEST = 54;</code>
       */
      CHEST(54, 54),
      /**
       * <code>REDSTONE_WIRE = 55;</code>
       */
      REDSTONE_WIRE(55, 55),
      /**
       * <code>DIAMOND_ORE = 56;</code>
       */
      DIAMOND_ORE(56, 56),
      /**
       * <code>DIAMOND_BLOCK = 57;</code>
       */
      DIAMOND_BLOCK(57, 57),
      /**
       * <code>WORKBENCH = 58;</code>
       */
      WORKBENCH(58, 58),
      /**
       * <code>CROPS = 59;</code>
       */
      CROPS(59, 59),
      /**
       * <code>SOIL = 60;</code>
       */
      SOIL(60, 60),
      /**
       * <code>FURNACE = 61;</code>
       */
      FURNACE(61, 61),
      /**
       * <code>BURNING_FURNACE = 62;</code>
       */
      BURNING_FURNACE(62, 62),
      /**
       * <code>SIGN_POST = 63;</code>
       */
      SIGN_POST(63, 63),
      /**
       * <code>WOODEN_DOOR = 64;</code>
       */
      WOODEN_DOOR(64, 64),
      /**
       * <code>LADDER = 65;</code>
       */
      LADDER(65, 65),
      /**
       * <code>RAILS = 66;</code>
       */
      RAILS(66, 66),
      /**
       * <code>COBBLESTONE_STAIRS = 67;</code>
       */
      COBBLESTONE_STAIRS(67, 67),
      /**
       * <code>WALL_SIGN = 68;</code>
       */
      WALL_SIGN(68, 68),
      /**
       * <code>LEVER = 69;</code>
       */
      LEVER(69, 69),
      /**
       * <code>STONE_PLATE = 70;</code>
       */
      STONE_PLATE(70, 70),
      /**
       * <code>IRON_DOOR_BLOCK = 71;</code>
       */
      IRON_DOOR_BLOCK(71, 71),
      /**
       * <code>WOOD_PLATE = 72;</code>
       */
      WOOD_PLATE(72, 72),
      /**
       * <code>REDSTONE_ORE = 73;</code>
       */
      REDSTONE_ORE(73, 73),
      /**
       * <code>GLOWING_REDSTONE_ORE = 74;</code>
       */
      GLOWING_REDSTONE_ORE(74, 74),
      /**
       * <code>REDSTONE_TORCH_OFF = 75;</code>
       */
      REDSTONE_TORCH_OFF(75, 75),
      /**
       * <code>REDSTONE_TORCH_ON = 76;</code>
       */
      REDSTONE_TORCH_ON(76, 76),
      /**
       * <code>STONE_BUTTON = 77;</code>
       */
      STONE_BUTTON(77, 77),
      /**
       * <code>SNOW = 78;</code>
       */
      SNOW(78, 78),
      /**
       * <code>ICE = 79;</code>
       */
      ICE(79, 79),
      /**
       * <code>SNOW_BLOCK = 80;</code>
       */
      SNOW_BLOCK(80, 80),
      /**
       * <code>CACTUS = 81;</code>
       */
      CACTUS(81, 81),
      /**
       * <code>CLAY = 82;</code>
       */
      CLAY(82, 82),
      /**
       * <code>SUGAR_CANE_BLOCK = 83;</code>
       */
      SUGAR_CANE_BLOCK(83, 83),
      /**
       * <code>JUKEBOX = 84;</code>
       */
      JUKEBOX(84, 84),
      /**
       * <code>FENCE = 85;</code>
       */
      FENCE(85, 85),
      /**
       * <code>PUMPKIN = 86;</code>
       */
      PUMPKIN(86, 86),
      /**
       * <code>NETHERRACK = 87;</code>
       */
      NETHERRACK(87, 87),
      /**
       * <code>SOUL_SAND = 88;</code>
       */
      SOUL_SAND(88, 88),
      /**
       * <code>GLOWSTONE = 89;</code>
       */
      GLOWSTONE(89, 89),
      /**
       * <code>PORTAL = 90;</code>
       */
      PORTAL(90, 90),
      /**
       * <code>JACK_O_LANTERN = 91;</code>
       */
      JACK_O_LANTERN(91, 91),
      /**
       * <code>CAKE_BLOCK = 92;</code>
       */
      CAKE_BLOCK(92, 92),
      /**
       * <code>DIODE_BLOCK_OFF = 93;</code>
       */
      DIODE_BLOCK_OFF(93, 93),
      /**
       * <code>DIODE_BLOCK_ON = 94;</code>
       */
      DIODE_BLOCK_ON(94, 94),
      /**
       * <code>STAINED_GLASS = 95;</code>
       *
       * <pre>
       * &#64;Deprecated
       * LOCKED_CHEST = 95;
       * </pre>
       */
      STAINED_GLASS(95, 95),
      /**
       * <code>TRAP_DOOR = 96;</code>
       */
      TRAP_DOOR(96, 96),
      /**
       * <code>MONSTER_EGGS = 97;</code>
       */
      MONSTER_EGGS(97, 97),
      /**
       * <code>SMOOTH_BRICK = 98;</code>
       */
      SMOOTH_BRICK(98, 98),
      /**
       * <code>HUGE_MUSHROOM_1 = 99;</code>
       */
      HUGE_MUSHROOM_1(99, 99),
      /**
       * <code>HUGE_MUSHROOM_2 = 100;</code>
       */
      HUGE_MUSHROOM_2(100, 100),
      /**
       * <code>IRON_FENCE = 101;</code>
       */
      IRON_FENCE(101, 101),
      /**
       * <code>THIN_GLASS = 102;</code>
       */
      THIN_GLASS(102, 102),
      /**
       * <code>MELON_BLOCK = 103;</code>
       */
      MELON_BLOCK(103, 103),
      /**
       * <code>PUMPKIN_STEM = 104;</code>
       */
      PUMPKIN_STEM(104, 104),
      /**
       * <code>MELON_STEM = 105;</code>
       */
      MELON_STEM(105, 105),
      /**
       * <code>VINE = 106;</code>
       */
      VINE(106, 106),
      /**
       * <code>FENCE_GATE = 107;</code>
       */
      FENCE_GATE(107, 107),
      /**
       * <code>BRICK_STAIRS = 108;</code>
       */
      BRICK_STAIRS(108, 108),
      /**
       * <code>SMOOTH_STAIRS = 109;</code>
       */
      SMOOTH_STAIRS(109, 109),
      /**
       * <code>MYCEL = 110;</code>
       */
      MYCEL(110, 110),
      /**
       * <code>WATER_LILY = 111;</code>
       */
      WATER_LILY(111, 111),
      /**
       * <code>NETHER_BRICK = 112;</code>
       */
      NETHER_BRICK(112, 112),
      /**
       * <code>NETHER_FENCE = 113;</code>
       */
      NETHER_FENCE(113, 113),
      /**
       * <code>NETHER_BRICK_STAIRS = 114;</code>
       */
      NETHER_BRICK_STAIRS(114, 114),
      /**
       * <code>NETHER_WARTS = 115;</code>
       */
      NETHER_WARTS(115, 115),
      /**
       * <code>ENCHANTMENT_TABLE = 116;</code>
       */
      ENCHANTMENT_TABLE(116, 116),
      /**
       * <code>BREWING_STAND = 117;</code>
       */
      BREWING_STAND(117, 117),
      /**
       * <code>CAULDRON = 118;</code>
       */
      CAULDRON(118, 118),
      /**
       * <code>ENDER_PORTAL = 119;</code>
       */
      ENDER_PORTAL(119, 119),
      /**
       * <code>ENDER_PORTAL_FRAME = 120;</code>
       */
      ENDER_PORTAL_FRAME(120, 120),
      /**
       * <code>ENDER_STONE = 121;</code>
       */
      ENDER_STONE(121, 121),
      /**
       * <code>DRAGON_EGG = 122;</code>
       */
      DRAGON_EGG(122, 122),
      /**
       * <code>REDSTONE_LAMP_OFF = 123;</code>
       */
      REDSTONE_LAMP_OFF(123, 123),
      /**
       * <code>REDSTONE_LAMP_ON = 124;</code>
       */
      REDSTONE_LAMP_ON(124, 124),
      /**
       * <code>WOOD_DOUBLE_STEP = 125;</code>
       */
      WOOD_DOUBLE_STEP(125, 125),
      /**
       * <code>WOOD_STEP = 126;</code>
       */
      WOOD_STEP(126, 126),
      /**
       * <code>COCOA = 127;</code>
       */
      COCOA(127, 127),
      /**
       * <code>SANDSTONE_STAIRS = 128;</code>
       */
      SANDSTONE_STAIRS(128, 128),
      /**
       * <code>EMERALD_ORE = 129;</code>
       */
      EMERALD_ORE(129, 129),
      /**
       * <code>ENDER_CHEST = 130;</code>
       */
      ENDER_CHEST(130, 130),
      /**
       * <code>TRIPWIRE_HOOK = 131;</code>
       */
      TRIPWIRE_HOOK(131, 131),
      /**
       * <code>TRIPWIRE = 132;</code>
       */
      TRIPWIRE(132, 132),
      /**
       * <code>EMERALD_BLOCK = 133;</code>
       */
      EMERALD_BLOCK(133, 133),
      /**
       * <code>SPRUCE_WOOD_STAIRS = 134;</code>
       */
      SPRUCE_WOOD_STAIRS(134, 134),
      /**
       * <code>BIRCH_WOOD_STAIRS = 135;</code>
       */
      BIRCH_WOOD_STAIRS(135, 135),
      /**
       * <code>JUNGLE_WOOD_STAIRS = 136;</code>
       */
      JUNGLE_WOOD_STAIRS(136, 136),
      /**
       * <code>COMMAND = 137;</code>
       */
      COMMAND(137, 137),
      /**
       * <code>BEACON = 138;</code>
       */
      BEACON(138, 138),
      /**
       * <code>COBBLE_WALL = 139;</code>
       */
      COBBLE_WALL(139, 139),
      /**
       * <code>FLOWER_POT = 140;</code>
       */
      FLOWER_POT(140, 140),
      /**
       * <code>CARROT = 141;</code>
       */
      CARROT(141, 141),
      /**
       * <code>POTATO = 142;</code>
       */
      POTATO(142, 142),
      /**
       * <code>WOOD_BUTTON = 143;</code>
       */
      WOOD_BUTTON(143, 143),
      /**
       * <code>SKULL = 144;</code>
       */
      SKULL(144, 144),
      /**
       * <code>ANVIL = 145;</code>
       */
      ANVIL(145, 145),
      /**
       * <code>TRAPPED_CHEST = 146;</code>
       */
      TRAPPED_CHEST(146, 146),
      /**
       * <code>GOLD_PLATE = 147;</code>
       */
      GOLD_PLATE(147, 147),
      /**
       * <code>IRON_PLATE = 148;</code>
       */
      IRON_PLATE(148, 148),
      /**
       * <code>REDSTONE_COMPARATOR_OFF = 149;</code>
       */
      REDSTONE_COMPARATOR_OFF(149, 149),
      /**
       * <code>REDSTONE_COMPARATOR_ON = 150;</code>
       */
      REDSTONE_COMPARATOR_ON(150, 150),
      /**
       * <code>DAYLIGHT_DETECTOR = 151;</code>
       */
      DAYLIGHT_DETECTOR(151, 151),
      /**
       * <code>REDSTONE_BLOCK = 152;</code>
       */
      REDSTONE_BLOCK(152, 152),
      /**
       * <code>QUARTZ_ORE = 153;</code>
       */
      QUARTZ_ORE(153, 153),
      /**
       * <code>HOPPER = 154;</code>
       */
      HOPPER(154, 154),
      /**
       * <code>QUARTZ_BLOCK = 155;</code>
       */
      QUARTZ_BLOCK(155, 155),
      /**
       * <code>QUARTZ_STAIRS = 156;</code>
       */
      QUARTZ_STAIRS(156, 156),
      /**
       * <code>ACTIVATOR_RAIL = 157;</code>
       */
      ACTIVATOR_RAIL(157, 157),
      /**
       * <code>DROPPER = 158;</code>
       */
      DROPPER(158, 158),
      /**
       * <code>STAINED_CLAY = 159;</code>
       */
      STAINED_CLAY(159, 159),
      /**
       * <code>STAINED_GLASS_PANE = 160;</code>
       */
      STAINED_GLASS_PANE(160, 160),
      /**
       * <code>LEAVES_2 = 161;</code>
       */
      LEAVES_2(161, 161),
      /**
       * <code>LOG_2 = 162;</code>
       */
      LOG_2(162, 162),
      /**
       * <code>ACACIA_STAIRS = 163;</code>
       */
      ACACIA_STAIRS(163, 163),
      /**
       * <code>DARK_OAK_STAIRS = 164;</code>
       */
      DARK_OAK_STAIRS(164, 164),
      /**
       * <code>HAY_BLOCK = 170;</code>
       */
      HAY_BLOCK(165, 170),
      /**
       * <code>CARPET = 171;</code>
       */
      CARPET(166, 171),
      /**
       * <code>HARD_CLAY = 172;</code>
       */
      HARD_CLAY(167, 172),
      /**
       * <code>COAL_BLOCK = 173;</code>
       */
      COAL_BLOCK(168, 173),
      /**
       * <code>PACKED_ICE = 174;</code>
       */
      PACKED_ICE(169, 174),
      /**
       * <code>DOUBLE_PLANT = 175;</code>
       */
      DOUBLE_PLANT(170, 175),
      /**
       * <code>IRON_SPADE = 256;</code>
       *
       * <pre>
       * ----- Item Separator -----
       * </pre>
       */
      IRON_SPADE(171, 256),
      /**
       * <code>IRON_PICKAXE = 257;</code>
       */
      IRON_PICKAXE(172, 257),
      /**
       * <code>IRON_AXE = 258;</code>
       */
      IRON_AXE(173, 258),
      /**
       * <code>FLINT_AND_STEEL = 259;</code>
       */
      FLINT_AND_STEEL(174, 259),
      /**
       * <code>APPLE = 260;</code>
       */
      APPLE(175, 260),
      /**
       * <code>BOW = 261;</code>
       */
      BOW(176, 261),
      /**
       * <code>ARROW = 262;</code>
       */
      ARROW(177, 262),
      /**
       * <code>COAL = 263;</code>
       */
      COAL(178, 263),
      /**
       * <code>DIAMOND = 264;</code>
       */
      DIAMOND(179, 264),
      /**
       * <code>IRON_INGOT = 265;</code>
       */
      IRON_INGOT(180, 265),
      /**
       * <code>GOLD_INGOT = 266;</code>
       */
      GOLD_INGOT(181, 266),
      /**
       * <code>IRON_SWORD = 267;</code>
       */
      IRON_SWORD(182, 267),
      /**
       * <code>WOOD_SWORD = 268;</code>
       */
      WOOD_SWORD(183, 268),
      /**
       * <code>WOOD_SPADE = 269;</code>
       */
      WOOD_SPADE(184, 269),
      /**
       * <code>WOOD_PICKAXE = 270;</code>
       */
      WOOD_PICKAXE(185, 270),
      /**
       * <code>WOOD_AXE = 271;</code>
       */
      WOOD_AXE(186, 271),
      /**
       * <code>STONE_SWORD = 272;</code>
       */
      STONE_SWORD(187, 272),
      /**
       * <code>STONE_SPADE = 273;</code>
       */
      STONE_SPADE(188, 273),
      /**
       * <code>STONE_PICKAXE = 274;</code>
       */
      STONE_PICKAXE(189, 274),
      /**
       * <code>STONE_AXE = 275;</code>
       */
      STONE_AXE(190, 275),
      /**
       * <code>DIAMOND_SWORD = 276;</code>
       */
      DIAMOND_SWORD(191, 276),
      /**
       * <code>DIAMOND_SPADE = 277;</code>
       */
      DIAMOND_SPADE(192, 277),
      /**
       * <code>DIAMOND_PICKAXE = 278;</code>
       */
      DIAMOND_PICKAXE(193, 278),
      /**
       * <code>DIAMOND_AXE = 279;</code>
       */
      DIAMOND_AXE(194, 279),
      /**
       * <code>STICK = 280;</code>
       */
      STICK(195, 280),
      /**
       * <code>BOWL = 281;</code>
       */
      BOWL(196, 281),
      /**
       * <code>MUSHROOM_SOUP = 282;</code>
       */
      MUSHROOM_SOUP(197, 282),
      /**
       * <code>GOLD_SWORD = 283;</code>
       */
      GOLD_SWORD(198, 283),
      /**
       * <code>GOLD_SPADE = 284;</code>
       */
      GOLD_SPADE(199, 284),
      /**
       * <code>GOLD_PICKAXE = 285;</code>
       */
      GOLD_PICKAXE(200, 285),
      /**
       * <code>GOLD_AXE = 286;</code>
       */
      GOLD_AXE(201, 286),
      /**
       * <code>STRING = 287;</code>
       */
      STRING(202, 287),
      /**
       * <code>FEATHER = 288;</code>
       */
      FEATHER(203, 288),
      /**
       * <code>SULPHUR = 289;</code>
       */
      SULPHUR(204, 289),
      /**
       * <code>WOOD_HOE = 290;</code>
       */
      WOOD_HOE(205, 290),
      /**
       * <code>STONE_HOE = 291;</code>
       */
      STONE_HOE(206, 291),
      /**
       * <code>IRON_HOE = 292;</code>
       */
      IRON_HOE(207, 292),
      /**
       * <code>DIAMOND_HOE = 293;</code>
       */
      DIAMOND_HOE(208, 293),
      /**
       * <code>GOLD_HOE = 294;</code>
       */
      GOLD_HOE(209, 294),
      /**
       * <code>SEEDS = 295;</code>
       */
      SEEDS(210, 295),
      /**
       * <code>WHEAT = 296;</code>
       */
      WHEAT(211, 296),
      /**
       * <code>BREAD = 297;</code>
       */
      BREAD(212, 297),
      /**
       * <code>LEATHER_HELMET = 298;</code>
       */
      LEATHER_HELMET(213, 298),
      /**
       * <code>LEATHER_CHESTPLATE = 299;</code>
       */
      LEATHER_CHESTPLATE(214, 299),
      /**
       * <code>LEATHER_LEGGINGS = 300;</code>
       */
      LEATHER_LEGGINGS(215, 300),
      /**
       * <code>LEATHER_BOOTS = 301;</code>
       */
      LEATHER_BOOTS(216, 301),
      /**
       * <code>CHAINMAIL_HELMET = 302;</code>
       */
      CHAINMAIL_HELMET(217, 302),
      /**
       * <code>CHAINMAIL_CHESTPLATE = 303;</code>
       */
      CHAINMAIL_CHESTPLATE(218, 303),
      /**
       * <code>CHAINMAIL_LEGGINGS = 304;</code>
       */
      CHAINMAIL_LEGGINGS(219, 304),
      /**
       * <code>CHAINMAIL_BOOTS = 305;</code>
       */
      CHAINMAIL_BOOTS(220, 305),
      /**
       * <code>IRON_HELMET = 306;</code>
       */
      IRON_HELMET(221, 306),
      /**
       * <code>IRON_CHESTPLATE = 307;</code>
       */
      IRON_CHESTPLATE(222, 307),
      /**
       * <code>IRON_LEGGINGS = 308;</code>
       */
      IRON_LEGGINGS(223, 308),
      /**
       * <code>IRON_BOOTS = 309;</code>
       */
      IRON_BOOTS(224, 309),
      /**
       * <code>DIAMOND_HELMET = 310;</code>
       */
      DIAMOND_HELMET(225, 310),
      /**
       * <code>DIAMOND_CHESTPLATE = 311;</code>
       */
      DIAMOND_CHESTPLATE(226, 311),
      /**
       * <code>DIAMOND_LEGGINGS = 312;</code>
       */
      DIAMOND_LEGGINGS(227, 312),
      /**
       * <code>DIAMOND_BOOTS = 313;</code>
       */
      DIAMOND_BOOTS(228, 313),
      /**
       * <code>GOLD_HELMET = 314;</code>
       */
      GOLD_HELMET(229, 314),
      /**
       * <code>GOLD_CHESTPLATE = 315;</code>
       */
      GOLD_CHESTPLATE(230, 315),
      /**
       * <code>GOLD_LEGGINGS = 316;</code>
       */
      GOLD_LEGGINGS(231, 316),
      /**
       * <code>GOLD_BOOTS = 317;</code>
       */
      GOLD_BOOTS(232, 317),
      /**
       * <code>FLINT = 318;</code>
       */
      FLINT(233, 318),
      /**
       * <code>PORK = 319;</code>
       */
      PORK(234, 319),
      /**
       * <code>GRILLED_PORK = 320;</code>
       */
      GRILLED_PORK(235, 320),
      /**
       * <code>PAINTING = 321;</code>
       */
      PAINTING(236, 321),
      /**
       * <code>GOLDEN_APPLE = 322;</code>
       */
      GOLDEN_APPLE(237, 322),
      /**
       * <code>SIGN = 323;</code>
       */
      SIGN(238, 323),
      /**
       * <code>WOOD_DOOR = 324;</code>
       */
      WOOD_DOOR(239, 324),
      /**
       * <code>BUCKET = 325;</code>
       */
      BUCKET(240, 325),
      /**
       * <code>WATER_BUCKET = 326;</code>
       */
      WATER_BUCKET(241, 326),
      /**
       * <code>LAVA_BUCKET = 327;</code>
       */
      LAVA_BUCKET(242, 327),
      /**
       * <code>MINECART = 328;</code>
       */
      MINECART(243, 328),
      /**
       * <code>SADDLE = 329;</code>
       */
      SADDLE(244, 329),
      /**
       * <code>IRON_DOOR = 330;</code>
       */
      IRON_DOOR(245, 330),
      /**
       * <code>REDSTONE = 331;</code>
       */
      REDSTONE(246, 331),
      /**
       * <code>SNOW_BALL = 332;</code>
       */
      SNOW_BALL(247, 332),
      /**
       * <code>BOAT = 333;</code>
       */
      BOAT(248, 333),
      /**
       * <code>LEATHER = 334;</code>
       */
      LEATHER(249, 334),
      /**
       * <code>MILK_BUCKET = 335;</code>
       */
      MILK_BUCKET(250, 335),
      /**
       * <code>CLAY_BRICK = 336;</code>
       */
      CLAY_BRICK(251, 336),
      /**
       * <code>CLAY_BALL = 337;</code>
       */
      CLAY_BALL(252, 337),
      /**
       * <code>SUGAR_CANE = 338;</code>
       */
      SUGAR_CANE(253, 338),
      /**
       * <code>PAPER = 339;</code>
       */
      PAPER(254, 339),
      /**
       * <code>BOOK = 340;</code>
       */
      BOOK(255, 340),
      /**
       * <code>SLIME_BALL = 341;</code>
       */
      SLIME_BALL(256, 341),
      /**
       * <code>STORAGE_MINECART = 342;</code>
       */
      STORAGE_MINECART(257, 342),
      /**
       * <code>POWERED_MINECART = 343;</code>
       */
      POWERED_MINECART(258, 343),
      /**
       * <code>EGG = 344;</code>
       */
      EGG(259, 344),
      /**
       * <code>COMPASS = 345;</code>
       */
      COMPASS(260, 345),
      /**
       * <code>FISHING_ROD = 346;</code>
       */
      FISHING_ROD(261, 346),
      /**
       * <code>WATCH = 347;</code>
       */
      WATCH(262, 347),
      /**
       * <code>GLOWSTONE_DUST = 348;</code>
       */
      GLOWSTONE_DUST(263, 348),
      /**
       * <code>RAW_FISH = 349;</code>
       */
      RAW_FISH(264, 349),
      /**
       * <code>COOKED_FISH = 350;</code>
       */
      COOKED_FISH(265, 350),
      /**
       * <code>INK_SACK = 351;</code>
       */
      INK_SACK(266, 351),
      /**
       * <code>BONE = 352;</code>
       */
      BONE(267, 352),
      /**
       * <code>SUGAR = 353;</code>
       */
      SUGAR(268, 353),
      /**
       * <code>CAKE = 354;</code>
       */
      CAKE(269, 354),
      /**
       * <code>BED = 355;</code>
       */
      BED(270, 355),
      /**
       * <code>DIODE = 356;</code>
       */
      DIODE(271, 356),
      /**
       * <code>COOKIE = 357;</code>
       */
      COOKIE(272, 357),
      /**
       * <code>MAP = 358;</code>
       *
       * <pre>
       **
       * &#64;see MapView
       * </pre>
       */
      MAP(273, 358),
      /**
       * <code>SHEARS = 359;</code>
       */
      SHEARS(274, 359),
      /**
       * <code>MELON = 360;</code>
       */
      MELON(275, 360),
      /**
       * <code>PUMPKIN_SEEDS = 361;</code>
       */
      PUMPKIN_SEEDS(276, 361),
      /**
       * <code>MELON_SEEDS = 362;</code>
       */
      MELON_SEEDS(277, 362),
      /**
       * <code>RAW_BEEF = 363;</code>
       */
      RAW_BEEF(278, 363),
      /**
       * <code>COOKED_BEEF = 364;</code>
       */
      COOKED_BEEF(279, 364),
      /**
       * <code>RAW_CHICKEN = 365;</code>
       */
      RAW_CHICKEN(280, 365),
      /**
       * <code>COOKED_CHICKEN = 366;</code>
       */
      COOKED_CHICKEN(281, 366),
      /**
       * <code>ROTTEN_FLESH = 367;</code>
       */
      ROTTEN_FLESH(282, 367),
      /**
       * <code>ENDER_PEARL = 368;</code>
       */
      ENDER_PEARL(283, 368),
      /**
       * <code>BLAZE_ROD = 369;</code>
       */
      BLAZE_ROD(284, 369),
      /**
       * <code>GHAST_TEAR = 370;</code>
       */
      GHAST_TEAR(285, 370),
      /**
       * <code>GOLD_NUGGET = 371;</code>
       */
      GOLD_NUGGET(286, 371),
      /**
       * <code>NETHER_STALK = 372;</code>
       */
      NETHER_STALK(287, 372),
      /**
       * <code>POTION = 373;</code>
       *
       * <pre>
       **
       * &#64;see Potion
       * </pre>
       */
      POTION(288, 373),
      /**
       * <code>GLASS_BOTTLE = 374;</code>
       */
      GLASS_BOTTLE(289, 374),
      /**
       * <code>SPIDER_EYE = 375;</code>
       */
      SPIDER_EYE(290, 375),
      /**
       * <code>FERMENTED_SPIDER_EYE = 376;</code>
       */
      FERMENTED_SPIDER_EYE(291, 376),
      /**
       * <code>BLAZE_POWDER = 377;</code>
       */
      BLAZE_POWDER(292, 377),
      /**
       * <code>MAGMA_CREAM = 378;</code>
       */
      MAGMA_CREAM(293, 378),
      /**
       * <code>BREWING_STAND_ITEM = 379;</code>
       */
      BREWING_STAND_ITEM(294, 379),
      /**
       * <code>CAULDRON_ITEM = 380;</code>
       */
      CAULDRON_ITEM(295, 380),
      /**
       * <code>EYE_OF_ENDER = 381;</code>
       */
      EYE_OF_ENDER(296, 381),
      /**
       * <code>SPECKLED_MELON = 382;</code>
       */
      SPECKLED_MELON(297, 382),
      /**
       * <code>MONSTER_EGG = 383;</code>
       */
      MONSTER_EGG(298, 383),
      /**
       * <code>EXP_BOTTLE = 384;</code>
       */
      EXP_BOTTLE(299, 384),
      /**
       * <code>FIREBALL = 385;</code>
       */
      FIREBALL(300, 385),
      /**
       * <code>BOOK_AND_QUILL = 386;</code>
       */
      BOOK_AND_QUILL(301, 386),
      /**
       * <code>WRITTEN_BOOK = 387;</code>
       */
      WRITTEN_BOOK(302, 387),
      /**
       * <code>EMERALD = 388;</code>
       */
      EMERALD(303, 388),
      /**
       * <code>ITEM_FRAME = 389;</code>
       */
      ITEM_FRAME(304, 389),
      /**
       * <code>FLOWER_POT_ITEM = 390;</code>
       */
      FLOWER_POT_ITEM(305, 390),
      /**
       * <code>CARROT_ITEM = 391;</code>
       */
      CARROT_ITEM(306, 391),
      /**
       * <code>POTATO_ITEM = 392;</code>
       */
      POTATO_ITEM(307, 392),
      /**
       * <code>BAKED_POTATO = 393;</code>
       */
      BAKED_POTATO(308, 393),
      /**
       * <code>POISONOUS_POTATO = 394;</code>
       */
      POISONOUS_POTATO(309, 394),
      /**
       * <code>EMPTY_MAP = 395;</code>
       */
      EMPTY_MAP(310, 395),
      /**
       * <code>GOLDEN_CARROT = 396;</code>
       */
      GOLDEN_CARROT(311, 396),
      /**
       * <code>SKULL_ITEM = 397;</code>
       */
      SKULL_ITEM(312, 397),
      /**
       * <code>CARROT_STICK = 398;</code>
       */
      CARROT_STICK(313, 398),
      /**
       * <code>NETHER_STAR = 399;</code>
       */
      NETHER_STAR(314, 399),
      /**
       * <code>PUMPKIN_PIE = 400;</code>
       */
      PUMPKIN_PIE(315, 400),
      /**
       * <code>FIREWORK = 401;</code>
       */
      FIREWORK(316, 401),
      /**
       * <code>FIREWORK_CHARGE = 402;</code>
       */
      FIREWORK_CHARGE(317, 402),
      /**
       * <code>ENCHANTED_BOOK = 403;</code>
       */
      ENCHANTED_BOOK(318, 403),
      /**
       * <code>REDSTONE_COMPARATOR = 404;</code>
       */
      REDSTONE_COMPARATOR(319, 404),
      /**
       * <code>NETHER_BRICK_ITEM = 405;</code>
       */
      NETHER_BRICK_ITEM(320, 405),
      /**
       * <code>QUARTZ = 406;</code>
       */
      QUARTZ(321, 406),
      /**
       * <code>EXPLOSIVE_MINECART = 407;</code>
       */
      EXPLOSIVE_MINECART(322, 407),
      /**
       * <code>HOPPER_MINECART = 408;</code>
       */
      HOPPER_MINECART(323, 408),
      /**
       * <code>IRON_BARDING = 417;</code>
       */
      IRON_BARDING(324, 417),
      /**
       * <code>GOLD_BARDING = 418;</code>
       */
      GOLD_BARDING(325, 418),
      /**
       * <code>DIAMOND_BARDING = 419;</code>
       */
      DIAMOND_BARDING(326, 419),
      /**
       * <code>LEASH = 420;</code>
       */
      LEASH(327, 420),
      /**
       * <code>NAME_TAG = 421;</code>
       */
      NAME_TAG(328, 421),
      /**
       * <code>COMMAND_MINECART = 422;</code>
       */
      COMMAND_MINECART(329, 422),
      /**
       * <code>GOLD_RECORD = 2256;</code>
       */
      GOLD_RECORD(330, 2256),
      /**
       * <code>GREEN_RECORD = 2257;</code>
       */
      GREEN_RECORD(331, 2257),
      /**
       * <code>RECORD_3 = 2258;</code>
       */
      RECORD_3(332, 2258),
      /**
       * <code>RECORD_4 = 2259;</code>
       */
      RECORD_4(333, 2259),
      /**
       * <code>RECORD_5 = 2260;</code>
       */
      RECORD_5(334, 2260),
      /**
       * <code>RECORD_6 = 2261;</code>
       */
      RECORD_6(335, 2261),
      /**
       * <code>RECORD_7 = 2262;</code>
       */
      RECORD_7(336, 2262),
      /**
       * <code>RECORD_8 = 2263;</code>
       */
      RECORD_8(337, 2263),
      /**
       * <code>RECORD_9 = 2264;</code>
       */
      RECORD_9(338, 2264),
      /**
       * <code>RECORD_10 = 2265;</code>
       */
      RECORD_10(339, 2265),
      /**
       * <code>RECORD_11 = 2266;</code>
       */
      RECORD_11(340, 2266),
      /**
       * <code>RECORD_12 = 2267;</code>
       */
      RECORD_12(341, 2267),
      ;

      /**
       * <code>AIR = 0;</code>
       */
      public static final int AIR_VALUE = 0;
      /**
       * <code>STONE = 1;</code>
       */
      public static final int STONE_VALUE = 1;
      /**
       * <code>GRASS = 2;</code>
       */
      public static final int GRASS_VALUE = 2;
      /**
       * <code>DIRT = 3;</code>
       */
      public static final int DIRT_VALUE = 3;
      /**
       * <code>COBBLESTONE = 4;</code>
       */
      public static final int COBBLESTONE_VALUE = 4;
      /**
       * <code>WOOD = 5;</code>
       */
      public static final int WOOD_VALUE = 5;
      /**
       * <code>SAPLING = 6;</code>
       */
      public static final int SAPLING_VALUE = 6;
      /**
       * <code>BEDROCK = 7;</code>
       */
      public static final int BEDROCK_VALUE = 7;
      /**
       * <code>WATER = 8;</code>
       */
      public static final int WATER_VALUE = 8;
      /**
       * <code>STATIONARY_WATER = 9;</code>
       */
      public static final int STATIONARY_WATER_VALUE = 9;
      /**
       * <code>LAVA = 10;</code>
       */
      public static final int LAVA_VALUE = 10;
      /**
       * <code>STATIONARY_LAVA = 11;</code>
       */
      public static final int STATIONARY_LAVA_VALUE = 11;
      /**
       * <code>SAND = 12;</code>
       */
      public static final int SAND_VALUE = 12;
      /**
       * <code>GRAVEL = 13;</code>
       */
      public static final int GRAVEL_VALUE = 13;
      /**
       * <code>GOLD_ORE = 14;</code>
       */
      public static final int GOLD_ORE_VALUE = 14;
      /**
       * <code>IRON_ORE = 15;</code>
       */
      public static final int IRON_ORE_VALUE = 15;
      /**
       * <code>COAL_ORE = 16;</code>
       */
      public static final int COAL_ORE_VALUE = 16;
      /**
       * <code>LOG = 17;</code>
       */
      public static final int LOG_VALUE = 17;
      /**
       * <code>LEAVES = 18;</code>
       */
      public static final int LEAVES_VALUE = 18;
      /**
       * <code>SPONGE = 19;</code>
       */
      public static final int SPONGE_VALUE = 19;
      /**
       * <code>GLASS = 20;</code>
       */
      public static final int GLASS_VALUE = 20;
      /**
       * <code>LAPIS_ORE = 21;</code>
       */
      public static final int LAPIS_ORE_VALUE = 21;
      /**
       * <code>LAPIS_BLOCK = 22;</code>
       */
      public static final int LAPIS_BLOCK_VALUE = 22;
      /**
       * <code>DISPENSER = 23;</code>
       */
      public static final int DISPENSER_VALUE = 23;
      /**
       * <code>SANDSTONE = 24;</code>
       */
      public static final int SANDSTONE_VALUE = 24;
      /**
       * <code>NOTE_BLOCK = 25;</code>
       */
      public static final int NOTE_BLOCK_VALUE = 25;
      /**
       * <code>BED_BLOCK = 26;</code>
       */
      public static final int BED_BLOCK_VALUE = 26;
      /**
       * <code>POWERED_RAIL = 27;</code>
       */
      public static final int POWERED_RAIL_VALUE = 27;
      /**
       * <code>DETECTOR_RAIL = 28;</code>
       */
      public static final int DETECTOR_RAIL_VALUE = 28;
      /**
       * <code>PISTON_STICKY_BASE = 29;</code>
       */
      public static final int PISTON_STICKY_BASE_VALUE = 29;
      /**
       * <code>WEB = 30;</code>
       */
      public static final int WEB_VALUE = 30;
      /**
       * <code>LONG_GRASS = 31;</code>
       */
      public static final int LONG_GRASS_VALUE = 31;
      /**
       * <code>DEAD_BUSH = 32;</code>
       */
      public static final int DEAD_BUSH_VALUE = 32;
      /**
       * <code>PISTON_BASE = 33;</code>
       */
      public static final int PISTON_BASE_VALUE = 33;
      /**
       * <code>PISTON_EXTENSION = 34;</code>
       */
      public static final int PISTON_EXTENSION_VALUE = 34;
      /**
       * <code>WOOL = 35;</code>
       */
      public static final int WOOL_VALUE = 35;
      /**
       * <code>PISTON_MOVING_PIECE = 36;</code>
       */
      public static final int PISTON_MOVING_PIECE_VALUE = 36;
      /**
       * <code>YELLOW_FLOWER = 37;</code>
       */
      public static final int YELLOW_FLOWER_VALUE = 37;
      /**
       * <code>RED_ROSE = 38;</code>
       */
      public static final int RED_ROSE_VALUE = 38;
      /**
       * <code>BROWN_MUSHROOM = 39;</code>
       */
      public static final int BROWN_MUSHROOM_VALUE = 39;
      /**
       * <code>RED_MUSHROOM = 40;</code>
       */
      public static final int RED_MUSHROOM_VALUE = 40;
      /**
       * <code>GOLD_BLOCK = 41;</code>
       */
      public static final int GOLD_BLOCK_VALUE = 41;
      /**
       * <code>IRON_BLOCK = 42;</code>
       */
      public static final int IRON_BLOCK_VALUE = 42;
      /**
       * <code>DOUBLE_STEP = 43;</code>
       */
      public static final int DOUBLE_STEP_VALUE = 43;
      /**
       * <code>STEP = 44;</code>
       */
      public static final int STEP_VALUE = 44;
      /**
       * <code>BRICK = 45;</code>
       */
      public static final int BRICK_VALUE = 45;
      /**
       * <code>TNT = 46;</code>
       */
      public static final int TNT_VALUE = 46;
      /**
       * <code>BOOKSHELF = 47;</code>
       */
      public static final int BOOKSHELF_VALUE = 47;
      /**
       * <code>MOSSY_COBBLESTONE = 48;</code>
       */
      public static final int MOSSY_COBBLESTONE_VALUE = 48;
      /**
       * <code>OBSIDIAN = 49;</code>
       */
      public static final int OBSIDIAN_VALUE = 49;
      /**
       * <code>TORCH = 50;</code>
       */
      public static final int TORCH_VALUE = 50;
      /**
       * <code>FIRE = 51;</code>
       */
      public static final int FIRE_VALUE = 51;
      /**
       * <code>MOB_SPAWNER = 52;</code>
       */
      public static final int MOB_SPAWNER_VALUE = 52;
      /**
       * <code>WOOD_STAIRS = 53;</code>
       */
      public static final int WOOD_STAIRS_VALUE = 53;
      /**
       * <code>CHEST = 54;</code>
       */
      public static final int CHEST_VALUE = 54;
      /**
       * <code>REDSTONE_WIRE = 55;</code>
       */
      public static final int REDSTONE_WIRE_VALUE = 55;
      /**
       * <code>DIAMOND_ORE = 56;</code>
       */
      public static final int DIAMOND_ORE_VALUE = 56;
      /**
       * <code>DIAMOND_BLOCK = 57;</code>
       */
      public static final int DIAMOND_BLOCK_VALUE = 57;
      /**
       * <code>WORKBENCH = 58;</code>
       */
      public static final int WORKBENCH_VALUE = 58;
      /**
       * <code>CROPS = 59;</code>
       */
      public static final int CROPS_VALUE = 59;
      /**
       * <code>SOIL = 60;</code>
       */
      public static final int SOIL_VALUE = 60;
      /**
       * <code>FURNACE = 61;</code>
       */
      public static final int FURNACE_VALUE = 61;
      /**
       * <code>BURNING_FURNACE = 62;</code>
       */
      public static final int BURNING_FURNACE_VALUE = 62;
      /**
       * <code>SIGN_POST = 63;</code>
       */
      public static final int SIGN_POST_VALUE = 63;
      /**
       * <code>WOODEN_DOOR = 64;</code>
       */
      public static final int WOODEN_DOOR_VALUE = 64;
      /**
       * <code>LADDER = 65;</code>
       */
      public static final int LADDER_VALUE = 65;
      /**
       * <code>RAILS = 66;</code>
       */
      public static final int RAILS_VALUE = 66;
      /**
       * <code>COBBLESTONE_STAIRS = 67;</code>
       */
      public static final int COBBLESTONE_STAIRS_VALUE = 67;
      /**
       * <code>WALL_SIGN = 68;</code>
       */
      public static final int WALL_SIGN_VALUE = 68;
      /**
       * <code>LEVER = 69;</code>
       */
      public static final int LEVER_VALUE = 69;
      /**
       * <code>STONE_PLATE = 70;</code>
       */
      public static final int STONE_PLATE_VALUE = 70;
      /**
       * <code>IRON_DOOR_BLOCK = 71;</code>
       */
      public static final int IRON_DOOR_BLOCK_VALUE = 71;
      /**
       * <code>WOOD_PLATE = 72;</code>
       */
      public static final int WOOD_PLATE_VALUE = 72;
      /**
       * <code>REDSTONE_ORE = 73;</code>
       */
      public static final int REDSTONE_ORE_VALUE = 73;
      /**
       * <code>GLOWING_REDSTONE_ORE = 74;</code>
       */
      public static final int GLOWING_REDSTONE_ORE_VALUE = 74;
      /**
       * <code>REDSTONE_TORCH_OFF = 75;</code>
       */
      public static final int REDSTONE_TORCH_OFF_VALUE = 75;
      /**
       * <code>REDSTONE_TORCH_ON = 76;</code>
       */
      public static final int REDSTONE_TORCH_ON_VALUE = 76;
      /**
       * <code>STONE_BUTTON = 77;</code>
       */
      public static final int STONE_BUTTON_VALUE = 77;
      /**
       * <code>SNOW = 78;</code>
       */
      public static final int SNOW_VALUE = 78;
      /**
       * <code>ICE = 79;</code>
       */
      public static final int ICE_VALUE = 79;
      /**
       * <code>SNOW_BLOCK = 80;</code>
       */
      public static final int SNOW_BLOCK_VALUE = 80;
      /**
       * <code>CACTUS = 81;</code>
       */
      public static final int CACTUS_VALUE = 81;
      /**
       * <code>CLAY = 82;</code>
       */
      public static final int CLAY_VALUE = 82;
      /**
       * <code>SUGAR_CANE_BLOCK = 83;</code>
       */
      public static final int SUGAR_CANE_BLOCK_VALUE = 83;
      /**
       * <code>JUKEBOX = 84;</code>
       */
      public static final int JUKEBOX_VALUE = 84;
      /**
       * <code>FENCE = 85;</code>
       */
      public static final int FENCE_VALUE = 85;
      /**
       * <code>PUMPKIN = 86;</code>
       */
      public static final int PUMPKIN_VALUE = 86;
      /**
       * <code>NETHERRACK = 87;</code>
       */
      public static final int NETHERRACK_VALUE = 87;
      /**
       * <code>SOUL_SAND = 88;</code>
       */
      public static final int SOUL_SAND_VALUE = 88;
      /**
       * <code>GLOWSTONE = 89;</code>
       */
      public static final int GLOWSTONE_VALUE = 89;
      /**
       * <code>PORTAL = 90;</code>
       */
      public static final int PORTAL_VALUE = 90;
      /**
       * <code>JACK_O_LANTERN = 91;</code>
       */
      public static final int JACK_O_LANTERN_VALUE = 91;
      /**
       * <code>CAKE_BLOCK = 92;</code>
       */
      public static final int CAKE_BLOCK_VALUE = 92;
      /**
       * <code>DIODE_BLOCK_OFF = 93;</code>
       */
      public static final int DIODE_BLOCK_OFF_VALUE = 93;
      /**
       * <code>DIODE_BLOCK_ON = 94;</code>
       */
      public static final int DIODE_BLOCK_ON_VALUE = 94;
      /**
       * <code>STAINED_GLASS = 95;</code>
       *
       * <pre>
       * &#64;Deprecated
       * LOCKED_CHEST = 95;
       * </pre>
       */
      public static final int STAINED_GLASS_VALUE = 95;
      /**
       * <code>TRAP_DOOR = 96;</code>
       */
      public static final int TRAP_DOOR_VALUE = 96;
      /**
       * <code>MONSTER_EGGS = 97;</code>
       */
      public static final int MONSTER_EGGS_VALUE = 97;
      /**
       * <code>SMOOTH_BRICK = 98;</code>
       */
      public static final int SMOOTH_BRICK_VALUE = 98;
      /**
       * <code>HUGE_MUSHROOM_1 = 99;</code>
       */
      public static final int HUGE_MUSHROOM_1_VALUE = 99;
      /**
       * <code>HUGE_MUSHROOM_2 = 100;</code>
       */
      public static final int HUGE_MUSHROOM_2_VALUE = 100;
      /**
       * <code>IRON_FENCE = 101;</code>
       */
      public static final int IRON_FENCE_VALUE = 101;
      /**
       * <code>THIN_GLASS = 102;</code>
       */
      public static final int THIN_GLASS_VALUE = 102;
      /**
       * <code>MELON_BLOCK = 103;</code>
       */
      public static final int MELON_BLOCK_VALUE = 103;
      /**
       * <code>PUMPKIN_STEM = 104;</code>
       */
      public static final int PUMPKIN_STEM_VALUE = 104;
      /**
       * <code>MELON_STEM = 105;</code>
       */
      public static final int MELON_STEM_VALUE = 105;
      /**
       * <code>VINE = 106;</code>
       */
      public static final int VINE_VALUE = 106;
      /**
       * <code>FENCE_GATE = 107;</code>
       */
      public static final int FENCE_GATE_VALUE = 107;
      /**
       * <code>BRICK_STAIRS = 108;</code>
       */
      public static final int BRICK_STAIRS_VALUE = 108;
      /**
       * <code>SMOOTH_STAIRS = 109;</code>
       */
      public static final int SMOOTH_STAIRS_VALUE = 109;
      /**
       * <code>MYCEL = 110;</code>
       */
      public static final int MYCEL_VALUE = 110;
      /**
       * <code>WATER_LILY = 111;</code>
       */
      public static final int WATER_LILY_VALUE = 111;
      /**
       * <code>NETHER_BRICK = 112;</code>
       */
      public static final int NETHER_BRICK_VALUE = 112;
      /**
       * <code>NETHER_FENCE = 113;</code>
       */
      public static final int NETHER_FENCE_VALUE = 113;
      /**
       * <code>NETHER_BRICK_STAIRS = 114;</code>
       */
      public static final int NETHER_BRICK_STAIRS_VALUE = 114;
      /**
       * <code>NETHER_WARTS = 115;</code>
       */
      public static final int NETHER_WARTS_VALUE = 115;
      /**
       * <code>ENCHANTMENT_TABLE = 116;</code>
       */
      public static final int ENCHANTMENT_TABLE_VALUE = 116;
      /**
       * <code>BREWING_STAND = 117;</code>
       */
      public static final int BREWING_STAND_VALUE = 117;
      /**
       * <code>CAULDRON = 118;</code>
       */
      public static final int CAULDRON_VALUE = 118;
      /**
       * <code>ENDER_PORTAL = 119;</code>
       */
      public static final int ENDER_PORTAL_VALUE = 119;
      /**
       * <code>ENDER_PORTAL_FRAME = 120;</code>
       */
      public static final int ENDER_PORTAL_FRAME_VALUE = 120;
      /**
       * <code>ENDER_STONE = 121;</code>
       */
      public static final int ENDER_STONE_VALUE = 121;
      /**
       * <code>DRAGON_EGG = 122;</code>
       */
      public static final int DRAGON_EGG_VALUE = 122;
      /**
       * <code>REDSTONE_LAMP_OFF = 123;</code>
       */
      public static final int REDSTONE_LAMP_OFF_VALUE = 123;
      /**
       * <code>REDSTONE_LAMP_ON = 124;</code>
       */
      public static final int REDSTONE_LAMP_ON_VALUE = 124;
      /**
       * <code>WOOD_DOUBLE_STEP = 125;</code>
       */
      public static final int WOOD_DOUBLE_STEP_VALUE = 125;
      /**
       * <code>WOOD_STEP = 126;</code>
       */
      public static final int WOOD_STEP_VALUE = 126;
      /**
       * <code>COCOA = 127;</code>
       */
      public static final int COCOA_VALUE = 127;
      /**
       * <code>SANDSTONE_STAIRS = 128;</code>
       */
      public static final int SANDSTONE_STAIRS_VALUE = 128;
      /**
       * <code>EMERALD_ORE = 129;</code>
       */
      public static final int EMERALD_ORE_VALUE = 129;
      /**
       * <code>ENDER_CHEST = 130;</code>
       */
      public static final int ENDER_CHEST_VALUE = 130;
      /**
       * <code>TRIPWIRE_HOOK = 131;</code>
       */
      public static final int TRIPWIRE_HOOK_VALUE = 131;
      /**
       * <code>TRIPWIRE = 132;</code>
       */
      public static final int TRIPWIRE_VALUE = 132;
      /**
       * <code>EMERALD_BLOCK = 133;</code>
       */
      public static final int EMERALD_BLOCK_VALUE = 133;
      /**
       * <code>SPRUCE_WOOD_STAIRS = 134;</code>
       */
      public static final int SPRUCE_WOOD_STAIRS_VALUE = 134;
      /**
       * <code>BIRCH_WOOD_STAIRS = 135;</code>
       */
      public static final int BIRCH_WOOD_STAIRS_VALUE = 135;
      /**
       * <code>JUNGLE_WOOD_STAIRS = 136;</code>
       */
      public static final int JUNGLE_WOOD_STAIRS_VALUE = 136;
      /**
       * <code>COMMAND = 137;</code>
       */
      public static final int COMMAND_VALUE = 137;
      /**
       * <code>BEACON = 138;</code>
       */
      public static final int BEACON_VALUE = 138;
      /**
       * <code>COBBLE_WALL = 139;</code>
       */
      public static final int COBBLE_WALL_VALUE = 139;
      /**
       * <code>FLOWER_POT = 140;</code>
       */
      public static final int FLOWER_POT_VALUE = 140;
      /**
       * <code>CARROT = 141;</code>
       */
      public static final int CARROT_VALUE = 141;
      /**
       * <code>POTATO = 142;</code>
       */
      public static final int POTATO_VALUE = 142;
      /**
       * <code>WOOD_BUTTON = 143;</code>
       */
      public static final int WOOD_BUTTON_VALUE = 143;
      /**
       * <code>SKULL = 144;</code>
       */
      public static final int SKULL_VALUE = 144;
      /**
       * <code>ANVIL = 145;</code>
       */
      public static final int ANVIL_VALUE = 145;
      /**
       * <code>TRAPPED_CHEST = 146;</code>
       */
      public static final int TRAPPED_CHEST_VALUE = 146;
      /**
       * <code>GOLD_PLATE = 147;</code>
       */
      public static final int GOLD_PLATE_VALUE = 147;
      /**
       * <code>IRON_PLATE = 148;</code>
       */
      public static final int IRON_PLATE_VALUE = 148;
      /**
       * <code>REDSTONE_COMPARATOR_OFF = 149;</code>
       */
      public static final int REDSTONE_COMPARATOR_OFF_VALUE = 149;
      /**
       * <code>REDSTONE_COMPARATOR_ON = 150;</code>
       */
      public static final int REDSTONE_COMPARATOR_ON_VALUE = 150;
      /**
       * <code>DAYLIGHT_DETECTOR = 151;</code>
       */
      public static final int DAYLIGHT_DETECTOR_VALUE = 151;
      /**
       * <code>REDSTONE_BLOCK = 152;</code>
       */
      public static final int REDSTONE_BLOCK_VALUE = 152;
      /**
       * <code>QUARTZ_ORE = 153;</code>
       */
      public static final int QUARTZ_ORE_VALUE = 153;
      /**
       * <code>HOPPER = 154;</code>
       */
      public static final int HOPPER_VALUE = 154;
      /**
       * <code>QUARTZ_BLOCK = 155;</code>
       */
      public static final int QUARTZ_BLOCK_VALUE = 155;
      /**
       * <code>QUARTZ_STAIRS = 156;</code>
       */
      public static final int QUARTZ_STAIRS_VALUE = 156;
      /**
       * <code>ACTIVATOR_RAIL = 157;</code>
       */
      public static final int ACTIVATOR_RAIL_VALUE = 157;
      /**
       * <code>DROPPER = 158;</code>
       */
      public static final int DROPPER_VALUE = 158;
      /**
       * <code>STAINED_CLAY = 159;</code>
       */
      public static final int STAINED_CLAY_VALUE = 159;
      /**
       * <code>STAINED_GLASS_PANE = 160;</code>
       */
      public static final int STAINED_GLASS_PANE_VALUE = 160;
      /**
       * <code>LEAVES_2 = 161;</code>
       */
      public static final int LEAVES_2_VALUE = 161;
      /**
       * <code>LOG_2 = 162;</code>
       */
      public static final int LOG_2_VALUE = 162;
      /**
       * <code>ACACIA_STAIRS = 163;</code>
       */
      public static final int ACACIA_STAIRS_VALUE = 163;
      /**
       * <code>DARK_OAK_STAIRS = 164;</code>
       */
      public static final int DARK_OAK_STAIRS_VALUE = 164;
      /**
       * <code>HAY_BLOCK = 170;</code>
       */
      public static final int HAY_BLOCK_VALUE = 170;
      /**
       * <code>CARPET = 171;</code>
       */
      public static final int CARPET_VALUE = 171;
      /**
       * <code>HARD_CLAY = 172;</code>
       */
      public static final int HARD_CLAY_VALUE = 172;
      /**
       * <code>COAL_BLOCK = 173;</code>
       */
      public static final int COAL_BLOCK_VALUE = 173;
      /**
       * <code>PACKED_ICE = 174;</code>
       */
      public static final int PACKED_ICE_VALUE = 174;
      /**
       * <code>DOUBLE_PLANT = 175;</code>
       */
      public static final int DOUBLE_PLANT_VALUE = 175;
      /**
       * <code>IRON_SPADE = 256;</code>
       *
       * <pre>
       * ----- Item Separator -----
       * </pre>
       */
      public static final int IRON_SPADE_VALUE = 256;
      /**
       * <code>IRON_PICKAXE = 257;</code>
       */
      public static final int IRON_PICKAXE_VALUE = 257;
      /**
       * <code>IRON_AXE = 258;</code>
       */
      public static final int IRON_AXE_VALUE = 258;
      /**
       * <code>FLINT_AND_STEEL = 259;</code>
       */
      public static final int FLINT_AND_STEEL_VALUE = 259;
      /**
       * <code>APPLE = 260;</code>
       */
      public static final int APPLE_VALUE = 260;
      /**
       * <code>BOW = 261;</code>
       */
      public static final int BOW_VALUE = 261;
      /**
       * <code>ARROW = 262;</code>
       */
      public static final int ARROW_VALUE = 262;
      /**
       * <code>COAL = 263;</code>
       */
      public static final int COAL_VALUE = 263;
      /**
       * <code>DIAMOND = 264;</code>
       */
      public static final int DIAMOND_VALUE = 264;
      /**
       * <code>IRON_INGOT = 265;</code>
       */
      public static final int IRON_INGOT_VALUE = 265;
      /**
       * <code>GOLD_INGOT = 266;</code>
       */
      public static final int GOLD_INGOT_VALUE = 266;
      /**
       * <code>IRON_SWORD = 267;</code>
       */
      public static final int IRON_SWORD_VALUE = 267;
      /**
       * <code>WOOD_SWORD = 268;</code>
       */
      public static final int WOOD_SWORD_VALUE = 268;
      /**
       * <code>WOOD_SPADE = 269;</code>
       */
      public static final int WOOD_SPADE_VALUE = 269;
      /**
       * <code>WOOD_PICKAXE = 270;</code>
       */
      public static final int WOOD_PICKAXE_VALUE = 270;
      /**
       * <code>WOOD_AXE = 271;</code>
       */
      public static final int WOOD_AXE_VALUE = 271;
      /**
       * <code>STONE_SWORD = 272;</code>
       */
      public static final int STONE_SWORD_VALUE = 272;
      /**
       * <code>STONE_SPADE = 273;</code>
       */
      public static final int STONE_SPADE_VALUE = 273;
      /**
       * <code>STONE_PICKAXE = 274;</code>
       */
      public static final int STONE_PICKAXE_VALUE = 274;
      /**
       * <code>STONE_AXE = 275;</code>
       */
      public static final int STONE_AXE_VALUE = 275;
      /**
       * <code>DIAMOND_SWORD = 276;</code>
       */
      public static final int DIAMOND_SWORD_VALUE = 276;
      /**
       * <code>DIAMOND_SPADE = 277;</code>
       */
      public static final int DIAMOND_SPADE_VALUE = 277;
      /**
       * <code>DIAMOND_PICKAXE = 278;</code>
       */
      public static final int DIAMOND_PICKAXE_VALUE = 278;
      /**
       * <code>DIAMOND_AXE = 279;</code>
       */
      public static final int DIAMOND_AXE_VALUE = 279;
      /**
       * <code>STICK = 280;</code>
       */
      public static final int STICK_VALUE = 280;
      /**
       * <code>BOWL = 281;</code>
       */
      public static final int BOWL_VALUE = 281;
      /**
       * <code>MUSHROOM_SOUP = 282;</code>
       */
      public static final int MUSHROOM_SOUP_VALUE = 282;
      /**
       * <code>GOLD_SWORD = 283;</code>
       */
      public static final int GOLD_SWORD_VALUE = 283;
      /**
       * <code>GOLD_SPADE = 284;</code>
       */
      public static final int GOLD_SPADE_VALUE = 284;
      /**
       * <code>GOLD_PICKAXE = 285;</code>
       */
      public static final int GOLD_PICKAXE_VALUE = 285;
      /**
       * <code>GOLD_AXE = 286;</code>
       */
      public static final int GOLD_AXE_VALUE = 286;
      /**
       * <code>STRING = 287;</code>
       */
      public static final int STRING_VALUE = 287;
      /**
       * <code>FEATHER = 288;</code>
       */
      public static final int FEATHER_VALUE = 288;
      /**
       * <code>SULPHUR = 289;</code>
       */
      public static final int SULPHUR_VALUE = 289;
      /**
       * <code>WOOD_HOE = 290;</code>
       */
      public static final int WOOD_HOE_VALUE = 290;
      /**
       * <code>STONE_HOE = 291;</code>
       */
      public static final int STONE_HOE_VALUE = 291;
      /**
       * <code>IRON_HOE = 292;</code>
       */
      public static final int IRON_HOE_VALUE = 292;
      /**
       * <code>DIAMOND_HOE = 293;</code>
       */
      public static final int DIAMOND_HOE_VALUE = 293;
      /**
       * <code>GOLD_HOE = 294;</code>
       */
      public static final int GOLD_HOE_VALUE = 294;
      /**
       * <code>SEEDS = 295;</code>
       */
      public static final int SEEDS_VALUE = 295;
      /**
       * <code>WHEAT = 296;</code>
       */
      public static final int WHEAT_VALUE = 296;
      /**
       * <code>BREAD = 297;</code>
       */
      public static final int BREAD_VALUE = 297;
      /**
       * <code>LEATHER_HELMET = 298;</code>
       */
      public static final int LEATHER_HELMET_VALUE = 298;
      /**
       * <code>LEATHER_CHESTPLATE = 299;</code>
       */
      public static final int LEATHER_CHESTPLATE_VALUE = 299;
      /**
       * <code>LEATHER_LEGGINGS = 300;</code>
       */
      public static final int LEATHER_LEGGINGS_VALUE = 300;
      /**
       * <code>LEATHER_BOOTS = 301;</code>
       */
      public static final int LEATHER_BOOTS_VALUE = 301;
      /**
       * <code>CHAINMAIL_HELMET = 302;</code>
       */
      public static final int CHAINMAIL_HELMET_VALUE = 302;
      /**
       * <code>CHAINMAIL_CHESTPLATE = 303;</code>
       */
      public static final int CHAINMAIL_CHESTPLATE_VALUE = 303;
      /**
       * <code>CHAINMAIL_LEGGINGS = 304;</code>
       */
      public static final int CHAINMAIL_LEGGINGS_VALUE = 304;
      /**
       * <code>CHAINMAIL_BOOTS = 305;</code>
       */
      public static final int CHAINMAIL_BOOTS_VALUE = 305;
      /**
       * <code>IRON_HELMET = 306;</code>
       */
      public static final int IRON_HELMET_VALUE = 306;
      /**
       * <code>IRON_CHESTPLATE = 307;</code>
       */
      public static final int IRON_CHESTPLATE_VALUE = 307;
      /**
       * <code>IRON_LEGGINGS = 308;</code>
       */
      public static final int IRON_LEGGINGS_VALUE = 308;
      /**
       * <code>IRON_BOOTS = 309;</code>
       */
      public static final int IRON_BOOTS_VALUE = 309;
      /**
       * <code>DIAMOND_HELMET = 310;</code>
       */
      public static final int DIAMOND_HELMET_VALUE = 310;
      /**
       * <code>DIAMOND_CHESTPLATE = 311;</code>
       */
      public static final int DIAMOND_CHESTPLATE_VALUE = 311;
      /**
       * <code>DIAMOND_LEGGINGS = 312;</code>
       */
      public static final int DIAMOND_LEGGINGS_VALUE = 312;
      /**
       * <code>DIAMOND_BOOTS = 313;</code>
       */
      public static final int DIAMOND_BOOTS_VALUE = 313;
      /**
       * <code>GOLD_HELMET = 314;</code>
       */
      public static final int GOLD_HELMET_VALUE = 314;
      /**
       * <code>GOLD_CHESTPLATE = 315;</code>
       */
      public static final int GOLD_CHESTPLATE_VALUE = 315;
      /**
       * <code>GOLD_LEGGINGS = 316;</code>
       */
      public static final int GOLD_LEGGINGS_VALUE = 316;
      /**
       * <code>GOLD_BOOTS = 317;</code>
       */
      public static final int GOLD_BOOTS_VALUE = 317;
      /**
       * <code>FLINT = 318;</code>
       */
      public static final int FLINT_VALUE = 318;
      /**
       * <code>PORK = 319;</code>
       */
      public static final int PORK_VALUE = 319;
      /**
       * <code>GRILLED_PORK = 320;</code>
       */
      public static final int GRILLED_PORK_VALUE = 320;
      /**
       * <code>PAINTING = 321;</code>
       */
      public static final int PAINTING_VALUE = 321;
      /**
       * <code>GOLDEN_APPLE = 322;</code>
       */
      public static final int GOLDEN_APPLE_VALUE = 322;
      /**
       * <code>SIGN = 323;</code>
       */
      public static final int SIGN_VALUE = 323;
      /**
       * <code>WOOD_DOOR = 324;</code>
       */
      public static final int WOOD_DOOR_VALUE = 324;
      /**
       * <code>BUCKET = 325;</code>
       */
      public static final int BUCKET_VALUE = 325;
      /**
       * <code>WATER_BUCKET = 326;</code>
       */
      public static final int WATER_BUCKET_VALUE = 326;
      /**
       * <code>LAVA_BUCKET = 327;</code>
       */
      public static final int LAVA_BUCKET_VALUE = 327;
      /**
       * <code>MINECART = 328;</code>
       */
      public static final int MINECART_VALUE = 328;
      /**
       * <code>SADDLE = 329;</code>
       */
      public static final int SADDLE_VALUE = 329;
      /**
       * <code>IRON_DOOR = 330;</code>
       */
      public static final int IRON_DOOR_VALUE = 330;
      /**
       * <code>REDSTONE = 331;</code>
       */
      public static final int REDSTONE_VALUE = 331;
      /**
       * <code>SNOW_BALL = 332;</code>
       */
      public static final int SNOW_BALL_VALUE = 332;
      /**
       * <code>BOAT = 333;</code>
       */
      public static final int BOAT_VALUE = 333;
      /**
       * <code>LEATHER = 334;</code>
       */
      public static final int LEATHER_VALUE = 334;
      /**
       * <code>MILK_BUCKET = 335;</code>
       */
      public static final int MILK_BUCKET_VALUE = 335;
      /**
       * <code>CLAY_BRICK = 336;</code>
       */
      public static final int CLAY_BRICK_VALUE = 336;
      /**
       * <code>CLAY_BALL = 337;</code>
       */
      public static final int CLAY_BALL_VALUE = 337;
      /**
       * <code>SUGAR_CANE = 338;</code>
       */
      public static final int SUGAR_CANE_VALUE = 338;
      /**
       * <code>PAPER = 339;</code>
       */
      public static final int PAPER_VALUE = 339;
      /**
       * <code>BOOK = 340;</code>
       */
      public static final int BOOK_VALUE = 340;
      /**
       * <code>SLIME_BALL = 341;</code>
       */
      public static final int SLIME_BALL_VALUE = 341;
      /**
       * <code>STORAGE_MINECART = 342;</code>
       */
      public static final int STORAGE_MINECART_VALUE = 342;
      /**
       * <code>POWERED_MINECART = 343;</code>
       */
      public static final int POWERED_MINECART_VALUE = 343;
      /**
       * <code>EGG = 344;</code>
       */
      public static final int EGG_VALUE = 344;
      /**
       * <code>COMPASS = 345;</code>
       */
      public static final int COMPASS_VALUE = 345;
      /**
       * <code>FISHING_ROD = 346;</code>
       */
      public static final int FISHING_ROD_VALUE = 346;
      /**
       * <code>WATCH = 347;</code>
       */
      public static final int WATCH_VALUE = 347;
      /**
       * <code>GLOWSTONE_DUST = 348;</code>
       */
      public static final int GLOWSTONE_DUST_VALUE = 348;
      /**
       * <code>RAW_FISH = 349;</code>
       */
      public static final int RAW_FISH_VALUE = 349;
      /**
       * <code>COOKED_FISH = 350;</code>
       */
      public static final int COOKED_FISH_VALUE = 350;
      /**
       * <code>INK_SACK = 351;</code>
       */
      public static final int INK_SACK_VALUE = 351;
      /**
       * <code>BONE = 352;</code>
       */
      public static final int BONE_VALUE = 352;
      /**
       * <code>SUGAR = 353;</code>
       */
      public static final int SUGAR_VALUE = 353;
      /**
       * <code>CAKE = 354;</code>
       */
      public static final int CAKE_VALUE = 354;
      /**
       * <code>BED = 355;</code>
       */
      public static final int BED_VALUE = 355;
      /**
       * <code>DIODE = 356;</code>
       */
      public static final int DIODE_VALUE = 356;
      /**
       * <code>COOKIE = 357;</code>
       */
      public static final int COOKIE_VALUE = 357;
      /**
       * <code>MAP = 358;</code>
       *
       * <pre>
       **
       * &#64;see MapView
       * </pre>
       */
      public static final int MAP_VALUE = 358;
      /**
       * <code>SHEARS = 359;</code>
       */
      public static final int SHEARS_VALUE = 359;
      /**
       * <code>MELON = 360;</code>
       */
      public static final int MELON_VALUE = 360;
      /**
       * <code>PUMPKIN_SEEDS = 361;</code>
       */
      public static final int PUMPKIN_SEEDS_VALUE = 361;
      /**
       * <code>MELON_SEEDS = 362;</code>
       */
      public static final int MELON_SEEDS_VALUE = 362;
      /**
       * <code>RAW_BEEF = 363;</code>
       */
      public static final int RAW_BEEF_VALUE = 363;
      /**
       * <code>COOKED_BEEF = 364;</code>
       */
      public static final int COOKED_BEEF_VALUE = 364;
      /**
       * <code>RAW_CHICKEN = 365;</code>
       */
      public static final int RAW_CHICKEN_VALUE = 365;
      /**
       * <code>COOKED_CHICKEN = 366;</code>
       */
      public static final int COOKED_CHICKEN_VALUE = 366;
      /**
       * <code>ROTTEN_FLESH = 367;</code>
       */
      public static final int ROTTEN_FLESH_VALUE = 367;
      /**
       * <code>ENDER_PEARL = 368;</code>
       */
      public static final int ENDER_PEARL_VALUE = 368;
      /**
       * <code>BLAZE_ROD = 369;</code>
       */
      public static final int BLAZE_ROD_VALUE = 369;
      /**
       * <code>GHAST_TEAR = 370;</code>
       */
      public static final int GHAST_TEAR_VALUE = 370;
      /**
       * <code>GOLD_NUGGET = 371;</code>
       */
      public static final int GOLD_NUGGET_VALUE = 371;
      /**
       * <code>NETHER_STALK = 372;</code>
       */
      public static final int NETHER_STALK_VALUE = 372;
      /**
       * <code>POTION = 373;</code>
       *
       * <pre>
       **
       * &#64;see Potion
       * </pre>
       */
      public static final int POTION_VALUE = 373;
      /**
       * <code>GLASS_BOTTLE = 374;</code>
       */
      public static final int GLASS_BOTTLE_VALUE = 374;
      /**
       * <code>SPIDER_EYE = 375;</code>
       */
      public static final int SPIDER_EYE_VALUE = 375;
      /**
       * <code>FERMENTED_SPIDER_EYE = 376;</code>
       */
      public static final int FERMENTED_SPIDER_EYE_VALUE = 376;
      /**
       * <code>BLAZE_POWDER = 377;</code>
       */
      public static final int BLAZE_POWDER_VALUE = 377;
      /**
       * <code>MAGMA_CREAM = 378;</code>
       */
      public static final int MAGMA_CREAM_VALUE = 378;
      /**
       * <code>BREWING_STAND_ITEM = 379;</code>
       */
      public static final int BREWING_STAND_ITEM_VALUE = 379;
      /**
       * <code>CAULDRON_ITEM = 380;</code>
       */
      public static final int CAULDRON_ITEM_VALUE = 380;
      /**
       * <code>EYE_OF_ENDER = 381;</code>
       */
      public static final int EYE_OF_ENDER_VALUE = 381;
      /**
       * <code>SPECKLED_MELON = 382;</code>
       */
      public static final int SPECKLED_MELON_VALUE = 382;
      /**
       * <code>MONSTER_EGG = 383;</code>
       */
      public static final int MONSTER_EGG_VALUE = 383;
      /**
       * <code>EXP_BOTTLE = 384;</code>
       */
      public static final int EXP_BOTTLE_VALUE = 384;
      /**
       * <code>FIREBALL = 385;</code>
       */
      public static final int FIREBALL_VALUE = 385;
      /**
       * <code>BOOK_AND_QUILL = 386;</code>
       */
      public static final int BOOK_AND_QUILL_VALUE = 386;
      /**
       * <code>WRITTEN_BOOK = 387;</code>
       */
      public static final int WRITTEN_BOOK_VALUE = 387;
      /**
       * <code>EMERALD = 388;</code>
       */
      public static final int EMERALD_VALUE = 388;
      /**
       * <code>ITEM_FRAME = 389;</code>
       */
      public static final int ITEM_FRAME_VALUE = 389;
      /**
       * <code>FLOWER_POT_ITEM = 390;</code>
       */
      public static final int FLOWER_POT_ITEM_VALUE = 390;
      /**
       * <code>CARROT_ITEM = 391;</code>
       */
      public static final int CARROT_ITEM_VALUE = 391;
      /**
       * <code>POTATO_ITEM = 392;</code>
       */
      public static final int POTATO_ITEM_VALUE = 392;
      /**
       * <code>BAKED_POTATO = 393;</code>
       */
      public static final int BAKED_POTATO_VALUE = 393;
      /**
       * <code>POISONOUS_POTATO = 394;</code>
       */
      public static final int POISONOUS_POTATO_VALUE = 394;
      /**
       * <code>EMPTY_MAP = 395;</code>
       */
      public static final int EMPTY_MAP_VALUE = 395;
      /**
       * <code>GOLDEN_CARROT = 396;</code>
       */
      public static final int GOLDEN_CARROT_VALUE = 396;
      /**
       * <code>SKULL_ITEM = 397;</code>
       */
      public static final int SKULL_ITEM_VALUE = 397;
      /**
       * <code>CARROT_STICK = 398;</code>
       */
      public static final int CARROT_STICK_VALUE = 398;
      /**
       * <code>NETHER_STAR = 399;</code>
       */
      public static final int NETHER_STAR_VALUE = 399;
      /**
       * <code>PUMPKIN_PIE = 400;</code>
       */
      public static final int PUMPKIN_PIE_VALUE = 400;
      /**
       * <code>FIREWORK = 401;</code>
       */
      public static final int FIREWORK_VALUE = 401;
      /**
       * <code>FIREWORK_CHARGE = 402;</code>
       */
      public static final int FIREWORK_CHARGE_VALUE = 402;
      /**
       * <code>ENCHANTED_BOOK = 403;</code>
       */
      public static final int ENCHANTED_BOOK_VALUE = 403;
      /**
       * <code>REDSTONE_COMPARATOR = 404;</code>
       */
      public static final int REDSTONE_COMPARATOR_VALUE = 404;
      /**
       * <code>NETHER_BRICK_ITEM = 405;</code>
       */
      public static final int NETHER_BRICK_ITEM_VALUE = 405;
      /**
       * <code>QUARTZ = 406;</code>
       */
      public static final int QUARTZ_VALUE = 406;
      /**
       * <code>EXPLOSIVE_MINECART = 407;</code>
       */
      public static final int EXPLOSIVE_MINECART_VALUE = 407;
      /**
       * <code>HOPPER_MINECART = 408;</code>
       */
      public static final int HOPPER_MINECART_VALUE = 408;
      /**
       * <code>IRON_BARDING = 417;</code>
       */
      public static final int IRON_BARDING_VALUE = 417;
      /**
       * <code>GOLD_BARDING = 418;</code>
       */
      public static final int GOLD_BARDING_VALUE = 418;
      /**
       * <code>DIAMOND_BARDING = 419;</code>
       */
      public static final int DIAMOND_BARDING_VALUE = 419;
      /**
       * <code>LEASH = 420;</code>
       */
      public static final int LEASH_VALUE = 420;
      /**
       * <code>NAME_TAG = 421;</code>
       */
      public static final int NAME_TAG_VALUE = 421;
      /**
       * <code>COMMAND_MINECART = 422;</code>
       */
      public static final int COMMAND_MINECART_VALUE = 422;
      /**
       * <code>GOLD_RECORD = 2256;</code>
       */
      public static final int GOLD_RECORD_VALUE = 2256;
      /**
       * <code>GREEN_RECORD = 2257;</code>
       */
      public static final int GREEN_RECORD_VALUE = 2257;
      /**
       * <code>RECORD_3 = 2258;</code>
       */
      public static final int RECORD_3_VALUE = 2258;
      /**
       * <code>RECORD_4 = 2259;</code>
       */
      public static final int RECORD_4_VALUE = 2259;
      /**
       * <code>RECORD_5 = 2260;</code>
       */
      public static final int RECORD_5_VALUE = 2260;
      /**
       * <code>RECORD_6 = 2261;</code>
       */
      public static final int RECORD_6_VALUE = 2261;
      /**
       * <code>RECORD_7 = 2262;</code>
       */
      public static final int RECORD_7_VALUE = 2262;
      /**
       * <code>RECORD_8 = 2263;</code>
       */
      public static final int RECORD_8_VALUE = 2263;
      /**
       * <code>RECORD_9 = 2264;</code>
       */
      public static final int RECORD_9_VALUE = 2264;
      /**
       * <code>RECORD_10 = 2265;</code>
       */
      public static final int RECORD_10_VALUE = 2265;
      /**
       * <code>RECORD_11 = 2266;</code>
       */
      public static final int RECORD_11_VALUE = 2266;
      /**
       * <code>RECORD_12 = 2267;</code>
       */
      public static final int RECORD_12_VALUE = 2267;


      public final int getNumber() { return value; }

      public static Type valueOf(int value) {
        switch (value) {
          case 0: return AIR;
          case 1: return STONE;
          case 2: return GRASS;
          case 3: return DIRT;
          case 4: return COBBLESTONE;
          case 5: return WOOD;
          case 6: return SAPLING;
          case 7: return BEDROCK;
          case 8: return WATER;
          case 9: return STATIONARY_WATER;
          case 10: return LAVA;
          case 11: return STATIONARY_LAVA;
          case 12: return SAND;
          case 13: return GRAVEL;
          case 14: return GOLD_ORE;
          case 15: return IRON_ORE;
          case 16: return COAL_ORE;
          case 17: return LOG;
          case 18: return LEAVES;
          case 19: return SPONGE;
          case 20: return GLASS;
          case 21: return LAPIS_ORE;
          case 22: return LAPIS_BLOCK;
          case 23: return DISPENSER;
          case 24: return SANDSTONE;
          case 25: return NOTE_BLOCK;
          case 26: return BED_BLOCK;
          case 27: return POWERED_RAIL;
          case 28: return DETECTOR_RAIL;
          case 29: return PISTON_STICKY_BASE;
          case 30: return WEB;
          case 31: return LONG_GRASS;
          case 32: return DEAD_BUSH;
          case 33: return PISTON_BASE;
          case 34: return PISTON_EXTENSION;
          case 35: return WOOL;
          case 36: return PISTON_MOVING_PIECE;
          case 37: return YELLOW_FLOWER;
          case 38: return RED_ROSE;
          case 39: return BROWN_MUSHROOM;
          case 40: return RED_MUSHROOM;
          case 41: return GOLD_BLOCK;
          case 42: return IRON_BLOCK;
          case 43: return DOUBLE_STEP;
          case 44: return STEP;
          case 45: return BRICK;
          case 46: return TNT;
          case 47: return BOOKSHELF;
          case 48: return MOSSY_COBBLESTONE;
          case 49: return OBSIDIAN;
          case 50: return TORCH;
          case 51: return FIRE;
          case 52: return MOB_SPAWNER;
          case 53: return WOOD_STAIRS;
          case 54: return CHEST;
          case 55: return REDSTONE_WIRE;
          case 56: return DIAMOND_ORE;
          case 57: return DIAMOND_BLOCK;
          case 58: return WORKBENCH;
          case 59: return CROPS;
          case 60: return SOIL;
          case 61: return FURNACE;
          case 62: return BURNING_FURNACE;
          case 63: return SIGN_POST;
          case 64: return WOODEN_DOOR;
          case 65: return LADDER;
          case 66: return RAILS;
          case 67: return COBBLESTONE_STAIRS;
          case 68: return WALL_SIGN;
          case 69: return LEVER;
          case 70: return STONE_PLATE;
          case 71: return IRON_DOOR_BLOCK;
          case 72: return WOOD_PLATE;
          case 73: return REDSTONE_ORE;
          case 74: return GLOWING_REDSTONE_ORE;
          case 75: return REDSTONE_TORCH_OFF;
          case 76: return REDSTONE_TORCH_ON;
          case 77: return STONE_BUTTON;
          case 78: return SNOW;
          case 79: return ICE;
          case 80: return SNOW_BLOCK;
          case 81: return CACTUS;
          case 82: return CLAY;
          case 83: return SUGAR_CANE_BLOCK;
          case 84: return JUKEBOX;
          case 85: return FENCE;
          case 86: return PUMPKIN;
          case 87: return NETHERRACK;
          case 88: return SOUL_SAND;
          case 89: return GLOWSTONE;
          case 90: return PORTAL;
          case 91: return JACK_O_LANTERN;
          case 92: return CAKE_BLOCK;
          case 93: return DIODE_BLOCK_OFF;
          case 94: return DIODE_BLOCK_ON;
          case 95: return STAINED_GLASS;
          case 96: return TRAP_DOOR;
          case 97: return MONSTER_EGGS;
          case 98: return SMOOTH_BRICK;
          case 99: return HUGE_MUSHROOM_1;
          case 100: return HUGE_MUSHROOM_2;
          case 101: return IRON_FENCE;
          case 102: return THIN_GLASS;
          case 103: return MELON_BLOCK;
          case 104: return PUMPKIN_STEM;
          case 105: return MELON_STEM;
          case 106: return VINE;
          case 107: return FENCE_GATE;
          case 108: return BRICK_STAIRS;
          case 109: return SMOOTH_STAIRS;
          case 110: return MYCEL;
          case 111: return WATER_LILY;
          case 112: return NETHER_BRICK;
          case 113: return NETHER_FENCE;
          case 114: return NETHER_BRICK_STAIRS;
          case 115: return NETHER_WARTS;
          case 116: return ENCHANTMENT_TABLE;
          case 117: return BREWING_STAND;
          case 118: return CAULDRON;
          case 119: return ENDER_PORTAL;
          case 120: return ENDER_PORTAL_FRAME;
          case 121: return ENDER_STONE;
          case 122: return DRAGON_EGG;
          case 123: return REDSTONE_LAMP_OFF;
          case 124: return REDSTONE_LAMP_ON;
          case 125: return WOOD_DOUBLE_STEP;
          case 126: return WOOD_STEP;
          case 127: return COCOA;
          case 128: return SANDSTONE_STAIRS;
          case 129: return EMERALD_ORE;
          case 130: return ENDER_CHEST;
          case 131: return TRIPWIRE_HOOK;
          case 132: return TRIPWIRE;
          case 133: return EMERALD_BLOCK;
          case 134: return SPRUCE_WOOD_STAIRS;
          case 135: return BIRCH_WOOD_STAIRS;
          case 136: return JUNGLE_WOOD_STAIRS;
          case 137: return COMMAND;
          case 138: return BEACON;
          case 139: return COBBLE_WALL;
          case 140: return FLOWER_POT;
          case 141: return CARROT;
          case 142: return POTATO;
          case 143: return WOOD_BUTTON;
          case 144: return SKULL;
          case 145: return ANVIL;
          case 146: return TRAPPED_CHEST;
          case 147: return GOLD_PLATE;
          case 148: return IRON_PLATE;
          case 149: return REDSTONE_COMPARATOR_OFF;
          case 150: return REDSTONE_COMPARATOR_ON;
          case 151: return DAYLIGHT_DETECTOR;
          case 152: return REDSTONE_BLOCK;
          case 153: return QUARTZ_ORE;
          case 154: return HOPPER;
          case 155: return QUARTZ_BLOCK;
          case 156: return QUARTZ_STAIRS;
          case 157: return ACTIVATOR_RAIL;
          case 158: return DROPPER;
          case 159: return STAINED_CLAY;
          case 160: return STAINED_GLASS_PANE;
          case 161: return LEAVES_2;
          case 162: return LOG_2;
          case 163: return ACACIA_STAIRS;
          case 164: return DARK_OAK_STAIRS;
          case 170: return HAY_BLOCK;
          case 171: return CARPET;
          case 172: return HARD_CLAY;
          case 173: return COAL_BLOCK;
          case 174: return PACKED_ICE;
          case 175: return DOUBLE_PLANT;
          case 256: return IRON_SPADE;
          case 257: return IRON_PICKAXE;
          case 258: return IRON_AXE;
          case 259: return FLINT_AND_STEEL;
          case 260: return APPLE;
          case 261: return BOW;
          case 262: return ARROW;
          case 263: return COAL;
          case 264: return DIAMOND;
          case 265: return IRON_INGOT;
          case 266: return GOLD_INGOT;
          case 267: return IRON_SWORD;
          case 268: return WOOD_SWORD;
          case 269: return WOOD_SPADE;
          case 270: return WOOD_PICKAXE;
          case 271: return WOOD_AXE;
          case 272: return STONE_SWORD;
          case 273: return STONE_SPADE;
          case 274: return STONE_PICKAXE;
          case 275: return STONE_AXE;
          case 276: return DIAMOND_SWORD;
          case 277: return DIAMOND_SPADE;
          case 278: return DIAMOND_PICKAXE;
          case 279: return DIAMOND_AXE;
          case 280: return STICK;
          case 281: return BOWL;
          case 282: return MUSHROOM_SOUP;
          case 283: return GOLD_SWORD;
          case 284: return GOLD_SPADE;
          case 285: return GOLD_PICKAXE;
          case 286: return GOLD_AXE;
          case 287: return STRING;
          case 288: return FEATHER;
          case 289: return SULPHUR;
          case 290: return WOOD_HOE;
          case 291: return STONE_HOE;
          case 292: return IRON_HOE;
          case 293: return DIAMOND_HOE;
          case 294: return GOLD_HOE;
          case 295: return SEEDS;
          case 296: return WHEAT;
          case 297: return BREAD;
          case 298: return LEATHER_HELMET;
          case 299: return LEATHER_CHESTPLATE;
          case 300: return LEATHER_LEGGINGS;
          case 301: return LEATHER_BOOTS;
          case 302: return CHAINMAIL_HELMET;
          case 303: return CHAINMAIL_CHESTPLATE;
          case 304: return CHAINMAIL_LEGGINGS;
          case 305: return CHAINMAIL_BOOTS;
          case 306: return IRON_HELMET;
          case 307: return IRON_CHESTPLATE;
          case 308: return IRON_LEGGINGS;
          case 309: return IRON_BOOTS;
          case 310: return DIAMOND_HELMET;
          case 311: return DIAMOND_CHESTPLATE;
          case 312: return DIAMOND_LEGGINGS;
          case 313: return DIAMOND_BOOTS;
          case 314: return GOLD_HELMET;
          case 315: return GOLD_CHESTPLATE;
          case 316: return GOLD_LEGGINGS;
          case 317: return GOLD_BOOTS;
          case 318: return FLINT;
          case 319: return PORK;
          case 320: return GRILLED_PORK;
          case 321: return PAINTING;
          case 322: return GOLDEN_APPLE;
          case 323: return SIGN;
          case 324: return WOOD_DOOR;
          case 325: return BUCKET;
          case 326: return WATER_BUCKET;
          case 327: return LAVA_BUCKET;
          case 328: return MINECART;
          case 329: return SADDLE;
          case 330: return IRON_DOOR;
          case 331: return REDSTONE;
          case 332: return SNOW_BALL;
          case 333: return BOAT;
          case 334: return LEATHER;
          case 335: return MILK_BUCKET;
          case 336: return CLAY_BRICK;
          case 337: return CLAY_BALL;
          case 338: return SUGAR_CANE;
          case 339: return PAPER;
          case 340: return BOOK;
          case 341: return SLIME_BALL;
          case 342: return STORAGE_MINECART;
          case 343: return POWERED_MINECART;
          case 344: return EGG;
          case 345: return COMPASS;
          case 346: return FISHING_ROD;
          case 347: return WATCH;
          case 348: return GLOWSTONE_DUST;
          case 349: return RAW_FISH;
          case 350: return COOKED_FISH;
          case 351: return INK_SACK;
          case 352: return BONE;
          case 353: return SUGAR;
          case 354: return CAKE;
          case 355: return BED;
          case 356: return DIODE;
          case 357: return COOKIE;
          case 358: return MAP;
          case 359: return SHEARS;
          case 360: return MELON;
          case 361: return PUMPKIN_SEEDS;
          case 362: return MELON_SEEDS;
          case 363: return RAW_BEEF;
          case 364: return COOKED_BEEF;
          case 365: return RAW_CHICKEN;
          case 366: return COOKED_CHICKEN;
          case 367: return ROTTEN_FLESH;
          case 368: return ENDER_PEARL;
          case 369: return BLAZE_ROD;
          case 370: return GHAST_TEAR;
          case 371: return GOLD_NUGGET;
          case 372: return NETHER_STALK;
          case 373: return POTION;
          case 374: return GLASS_BOTTLE;
          case 375: return SPIDER_EYE;
          case 376: return FERMENTED_SPIDER_EYE;
          case 377: return BLAZE_POWDER;
          case 378: return MAGMA_CREAM;
          case 379: return BREWING_STAND_ITEM;
          case 380: return CAULDRON_ITEM;
          case 381: return EYE_OF_ENDER;
          case 382: return SPECKLED_MELON;
          case 383: return MONSTER_EGG;
          case 384: return EXP_BOTTLE;
          case 385: return FIREBALL;
          case 386: return BOOK_AND_QUILL;
          case 387: return WRITTEN_BOOK;
          case 388: return EMERALD;
          case 389: return ITEM_FRAME;
          case 390: return FLOWER_POT_ITEM;
          case 391: return CARROT_ITEM;
          case 392: return POTATO_ITEM;
          case 393: return BAKED_POTATO;
          case 394: return POISONOUS_POTATO;
          case 395: return EMPTY_MAP;
          case 396: return GOLDEN_CARROT;
          case 397: return SKULL_ITEM;
          case 398: return CARROT_STICK;
          case 399: return NETHER_STAR;
          case 400: return PUMPKIN_PIE;
          case 401: return FIREWORK;
          case 402: return FIREWORK_CHARGE;
          case 403: return ENCHANTED_BOOK;
          case 404: return REDSTONE_COMPARATOR;
          case 405: return NETHER_BRICK_ITEM;
          case 406: return QUARTZ;
          case 407: return EXPLOSIVE_MINECART;
          case 408: return HOPPER_MINECART;
          case 417: return IRON_BARDING;
          case 418: return GOLD_BARDING;
          case 419: return DIAMOND_BARDING;
          case 420: return LEASH;
          case 421: return NAME_TAG;
          case 422: return COMMAND_MINECART;
          case 2256: return GOLD_RECORD;
          case 2257: return GREEN_RECORD;
          case 2258: return RECORD_3;
          case 2259: return RECORD_4;
          case 2260: return RECORD_5;
          case 2261: return RECORD_6;
          case 2262: return RECORD_7;
          case 2263: return RECORD_8;
          case 2264: return RECORD_9;
          case 2265: return RECORD_10;
          case 2266: return RECORD_11;
          case 2267: return RECORD_12;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return au.id.katharos.robominions.api.Materials.Material.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:robominions.Material.Type)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private au.id.katharos.robominions.api.Materials.Material.Type type_;
    /**
     * <code>optional .robominions.Material.Type type = 1 [default = AIR];</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .robominions.Material.Type type = 1 [default = AIR];</code>
     */
    public au.id.katharos.robominions.api.Materials.Material.Type getType() {
      return type_;
    }

    private void initFields() {
      type_ = au.id.katharos.robominions.api.Materials.Material.Type.AIR;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static au.id.katharos.robominions.api.Materials.Material parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static au.id.katharos.robominions.api.Materials.Material parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static au.id.katharos.robominions.api.Materials.Material parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static au.id.katharos.robominions.api.Materials.Material parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static au.id.katharos.robominions.api.Materials.Material parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static au.id.katharos.robominions.api.Materials.Material parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static au.id.katharos.robominions.api.Materials.Material parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static au.id.katharos.robominions.api.Materials.Material parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static au.id.katharos.robominions.api.Materials.Material parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static au.id.katharos.robominions.api.Materials.Material parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(au.id.katharos.robominions.api.Materials.Material prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code robominions.Material}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:robominions.Material)
        au.id.katharos.robominions.api.Materials.MaterialOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return au.id.katharos.robominions.api.Materials.internal_static_robominions_Material_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return au.id.katharos.robominions.api.Materials.internal_static_robominions_Material_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                au.id.katharos.robominions.api.Materials.Material.class, au.id.katharos.robominions.api.Materials.Material.Builder.class);
      }

      // Construct using au.id.katharos.robominions.api.Materials.Material.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = au.id.katharos.robominions.api.Materials.Material.Type.AIR;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return au.id.katharos.robominions.api.Materials.internal_static_robominions_Material_descriptor;
      }

      public au.id.katharos.robominions.api.Materials.Material getDefaultInstanceForType() {
        return au.id.katharos.robominions.api.Materials.Material.getDefaultInstance();
      }

      public au.id.katharos.robominions.api.Materials.Material build() {
        au.id.katharos.robominions.api.Materials.Material result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public au.id.katharos.robominions.api.Materials.Material buildPartial() {
        au.id.katharos.robominions.api.Materials.Material result = new au.id.katharos.robominions.api.Materials.Material(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof au.id.katharos.robominions.api.Materials.Material) {
          return mergeFrom((au.id.katharos.robominions.api.Materials.Material)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(au.id.katharos.robominions.api.Materials.Material other) {
        if (other == au.id.katharos.robominions.api.Materials.Material.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        au.id.katharos.robominions.api.Materials.Material parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (au.id.katharos.robominions.api.Materials.Material) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private au.id.katharos.robominions.api.Materials.Material.Type type_ = au.id.katharos.robominions.api.Materials.Material.Type.AIR;
      /**
       * <code>optional .robominions.Material.Type type = 1 [default = AIR];</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .robominions.Material.Type type = 1 [default = AIR];</code>
       */
      public au.id.katharos.robominions.api.Materials.Material.Type getType() {
        return type_;
      }
      /**
       * <code>optional .robominions.Material.Type type = 1 [default = AIR];</code>
       */
      public Builder setType(au.id.katharos.robominions.api.Materials.Material.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .robominions.Material.Type type = 1 [default = AIR];</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = au.id.katharos.robominions.api.Materials.Material.Type.AIR;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:robominions.Material)
    }

    static {
      defaultInstance = new Material(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:robominions.Material)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_robominions_Material_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_robominions_Material_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017materials.proto\022\013robominions\"\314-\n\010Mater" +
      "ial\022-\n\004type\030\001 \001(\0162\032.robominions.Material" +
      ".Type:\003AIR\"\220-\n\004Type\022\007\n\003AIR\020\000\022\t\n\005STONE\020\001\022" +
      "\t\n\005GRASS\020\002\022\010\n\004DIRT\020\003\022\017\n\013COBBLESTONE\020\004\022\010\n" +
      "\004WOOD\020\005\022\013\n\007SAPLING\020\006\022\013\n\007BEDROCK\020\007\022\t\n\005WAT" +
      "ER\020\010\022\024\n\020STATIONARY_WATER\020\t\022\010\n\004LAVA\020\n\022\023\n\017" +
      "STATIONARY_LAVA\020\013\022\010\n\004SAND\020\014\022\n\n\006GRAVEL\020\r\022" +
      "\014\n\010GOLD_ORE\020\016\022\014\n\010IRON_ORE\020\017\022\014\n\010COAL_ORE\020" +
      "\020\022\007\n\003LOG\020\021\022\n\n\006LEAVES\020\022\022\n\n\006SPONGE\020\023\022\t\n\005GL" +
      "ASS\020\024\022\r\n\tLAPIS_ORE\020\025\022\017\n\013LAPIS_BLOCK\020\026\022\r\n",
      "\tDISPENSER\020\027\022\r\n\tSANDSTONE\020\030\022\016\n\nNOTE_BLOC" +
      "K\020\031\022\r\n\tBED_BLOCK\020\032\022\020\n\014POWERED_RAIL\020\033\022\021\n\r" +
      "DETECTOR_RAIL\020\034\022\026\n\022PISTON_STICKY_BASE\020\035\022" +
      "\007\n\003WEB\020\036\022\016\n\nLONG_GRASS\020\037\022\r\n\tDEAD_BUSH\020 \022" +
      "\017\n\013PISTON_BASE\020!\022\024\n\020PISTON_EXTENSION\020\"\022\010" +
      "\n\004WOOL\020#\022\027\n\023PISTON_MOVING_PIECE\020$\022\021\n\rYEL" +
      "LOW_FLOWER\020%\022\014\n\010RED_ROSE\020&\022\022\n\016BROWN_MUSH" +
      "ROOM\020\'\022\020\n\014RED_MUSHROOM\020(\022\016\n\nGOLD_BLOCK\020)" +
      "\022\016\n\nIRON_BLOCK\020*\022\017\n\013DOUBLE_STEP\020+\022\010\n\004STE" +
      "P\020,\022\t\n\005BRICK\020-\022\007\n\003TNT\020.\022\r\n\tBOOKSHELF\020/\022\025",
      "\n\021MOSSY_COBBLESTONE\0200\022\014\n\010OBSIDIAN\0201\022\t\n\005T" +
      "ORCH\0202\022\010\n\004FIRE\0203\022\017\n\013MOB_SPAWNER\0204\022\017\n\013WOO" +
      "D_STAIRS\0205\022\t\n\005CHEST\0206\022\021\n\rREDSTONE_WIRE\0207" +
      "\022\017\n\013DIAMOND_ORE\0208\022\021\n\rDIAMOND_BLOCK\0209\022\r\n\t" +
      "WORKBENCH\020:\022\t\n\005CROPS\020;\022\010\n\004SOIL\020<\022\013\n\007FURN" +
      "ACE\020=\022\023\n\017BURNING_FURNACE\020>\022\r\n\tSIGN_POST\020" +
      "?\022\017\n\013WOODEN_DOOR\020@\022\n\n\006LADDER\020A\022\t\n\005RAILS\020" +
      "B\022\026\n\022COBBLESTONE_STAIRS\020C\022\r\n\tWALL_SIGN\020D" +
      "\022\t\n\005LEVER\020E\022\017\n\013STONE_PLATE\020F\022\023\n\017IRON_DOO" +
      "R_BLOCK\020G\022\016\n\nWOOD_PLATE\020H\022\020\n\014REDSTONE_OR",
      "E\020I\022\030\n\024GLOWING_REDSTONE_ORE\020J\022\026\n\022REDSTON" +
      "E_TORCH_OFF\020K\022\025\n\021REDSTONE_TORCH_ON\020L\022\020\n\014" +
      "STONE_BUTTON\020M\022\010\n\004SNOW\020N\022\007\n\003ICE\020O\022\016\n\nSNO" +
      "W_BLOCK\020P\022\n\n\006CACTUS\020Q\022\010\n\004CLAY\020R\022\024\n\020SUGAR" +
      "_CANE_BLOCK\020S\022\013\n\007JUKEBOX\020T\022\t\n\005FENCE\020U\022\013\n" +
      "\007PUMPKIN\020V\022\016\n\nNETHERRACK\020W\022\r\n\tSOUL_SAND\020" +
      "X\022\r\n\tGLOWSTONE\020Y\022\n\n\006PORTAL\020Z\022\022\n\016JACK_O_L" +
      "ANTERN\020[\022\016\n\nCAKE_BLOCK\020\\\022\023\n\017DIODE_BLOCK_" +
      "OFF\020]\022\022\n\016DIODE_BLOCK_ON\020^\022\021\n\rSTAINED_GLA" +
      "SS\020_\022\r\n\tTRAP_DOOR\020`\022\020\n\014MONSTER_EGGS\020a\022\020\n",
      "\014SMOOTH_BRICK\020b\022\023\n\017HUGE_MUSHROOM_1\020c\022\023\n\017" +
      "HUGE_MUSHROOM_2\020d\022\016\n\nIRON_FENCE\020e\022\016\n\nTHI" +
      "N_GLASS\020f\022\017\n\013MELON_BLOCK\020g\022\020\n\014PUMPKIN_ST" +
      "EM\020h\022\016\n\nMELON_STEM\020i\022\010\n\004VINE\020j\022\016\n\nFENCE_" +
      "GATE\020k\022\020\n\014BRICK_STAIRS\020l\022\021\n\rSMOOTH_STAIR" +
      "S\020m\022\t\n\005MYCEL\020n\022\016\n\nWATER_LILY\020o\022\020\n\014NETHER" +
      "_BRICK\020p\022\020\n\014NETHER_FENCE\020q\022\027\n\023NETHER_BRI" +
      "CK_STAIRS\020r\022\020\n\014NETHER_WARTS\020s\022\025\n\021ENCHANT" +
      "MENT_TABLE\020t\022\021\n\rBREWING_STAND\020u\022\014\n\010CAULD" +
      "RON\020v\022\020\n\014ENDER_PORTAL\020w\022\026\n\022ENDER_PORTAL_",
      "FRAME\020x\022\017\n\013ENDER_STONE\020y\022\016\n\nDRAGON_EGG\020z" +
      "\022\025\n\021REDSTONE_LAMP_OFF\020{\022\024\n\020REDSTONE_LAMP" +
      "_ON\020|\022\024\n\020WOOD_DOUBLE_STEP\020}\022\r\n\tWOOD_STEP" +
      "\020~\022\t\n\005COCOA\020\177\022\025\n\020SANDSTONE_STAIRS\020\200\001\022\020\n\013" +
      "EMERALD_ORE\020\201\001\022\020\n\013ENDER_CHEST\020\202\001\022\022\n\rTRIP" +
      "WIRE_HOOK\020\203\001\022\r\n\010TRIPWIRE\020\204\001\022\022\n\rEMERALD_B" +
      "LOCK\020\205\001\022\027\n\022SPRUCE_WOOD_STAIRS\020\206\001\022\026\n\021BIRC" +
      "H_WOOD_STAIRS\020\207\001\022\027\n\022JUNGLE_WOOD_STAIRS\020\210" +
      "\001\022\014\n\007COMMAND\020\211\001\022\013\n\006BEACON\020\212\001\022\020\n\013COBBLE_W" +
      "ALL\020\213\001\022\017\n\nFLOWER_POT\020\214\001\022\013\n\006CARROT\020\215\001\022\013\n\006",
      "POTATO\020\216\001\022\020\n\013WOOD_BUTTON\020\217\001\022\n\n\005SKULL\020\220\001\022" +
      "\n\n\005ANVIL\020\221\001\022\022\n\rTRAPPED_CHEST\020\222\001\022\017\n\nGOLD_" +
      "PLATE\020\223\001\022\017\n\nIRON_PLATE\020\224\001\022\034\n\027REDSTONE_CO" +
      "MPARATOR_OFF\020\225\001\022\033\n\026REDSTONE_COMPARATOR_O" +
      "N\020\226\001\022\026\n\021DAYLIGHT_DETECTOR\020\227\001\022\023\n\016REDSTONE" +
      "_BLOCK\020\230\001\022\017\n\nQUARTZ_ORE\020\231\001\022\013\n\006HOPPER\020\232\001\022" +
      "\021\n\014QUARTZ_BLOCK\020\233\001\022\022\n\rQUARTZ_STAIRS\020\234\001\022\023" +
      "\n\016ACTIVATOR_RAIL\020\235\001\022\014\n\007DROPPER\020\236\001\022\021\n\014STA" +
      "INED_CLAY\020\237\001\022\027\n\022STAINED_GLASS_PANE\020\240\001\022\r\n" +
      "\010LEAVES_2\020\241\001\022\n\n\005LOG_2\020\242\001\022\022\n\rACACIA_STAIR",
      "S\020\243\001\022\024\n\017DARK_OAK_STAIRS\020\244\001\022\016\n\tHAY_BLOCK\020" +
      "\252\001\022\013\n\006CARPET\020\253\001\022\016\n\tHARD_CLAY\020\254\001\022\017\n\nCOAL_" +
      "BLOCK\020\255\001\022\017\n\nPACKED_ICE\020\256\001\022\021\n\014DOUBLE_PLAN" +
      "T\020\257\001\022\017\n\nIRON_SPADE\020\200\002\022\021\n\014IRON_PICKAXE\020\201\002" +
      "\022\r\n\010IRON_AXE\020\202\002\022\024\n\017FLINT_AND_STEEL\020\203\002\022\n\n" +
      "\005APPLE\020\204\002\022\010\n\003BOW\020\205\002\022\n\n\005ARROW\020\206\002\022\t\n\004COAL\020" +
      "\207\002\022\014\n\007DIAMOND\020\210\002\022\017\n\nIRON_INGOT\020\211\002\022\017\n\nGOL" +
      "D_INGOT\020\212\002\022\017\n\nIRON_SWORD\020\213\002\022\017\n\nWOOD_SWOR" +
      "D\020\214\002\022\017\n\nWOOD_SPADE\020\215\002\022\021\n\014WOOD_PICKAXE\020\216\002" +
      "\022\r\n\010WOOD_AXE\020\217\002\022\020\n\013STONE_SWORD\020\220\002\022\020\n\013STO",
      "NE_SPADE\020\221\002\022\022\n\rSTONE_PICKAXE\020\222\002\022\016\n\tSTONE" +
      "_AXE\020\223\002\022\022\n\rDIAMOND_SWORD\020\224\002\022\022\n\rDIAMOND_S" +
      "PADE\020\225\002\022\024\n\017DIAMOND_PICKAXE\020\226\002\022\020\n\013DIAMOND" +
      "_AXE\020\227\002\022\n\n\005STICK\020\230\002\022\t\n\004BOWL\020\231\002\022\022\n\rMUSHRO" +
      "OM_SOUP\020\232\002\022\017\n\nGOLD_SWORD\020\233\002\022\017\n\nGOLD_SPAD" +
      "E\020\234\002\022\021\n\014GOLD_PICKAXE\020\235\002\022\r\n\010GOLD_AXE\020\236\002\022\013" +
      "\n\006STRING\020\237\002\022\014\n\007FEATHER\020\240\002\022\014\n\007SULPHUR\020\241\002\022" +
      "\r\n\010WOOD_HOE\020\242\002\022\016\n\tSTONE_HOE\020\243\002\022\r\n\010IRON_H" +
      "OE\020\244\002\022\020\n\013DIAMOND_HOE\020\245\002\022\r\n\010GOLD_HOE\020\246\002\022\n" +
      "\n\005SEEDS\020\247\002\022\n\n\005WHEAT\020\250\002\022\n\n\005BREAD\020\251\002\022\023\n\016LE",
      "ATHER_HELMET\020\252\002\022\027\n\022LEATHER_CHESTPLATE\020\253\002" +
      "\022\025\n\020LEATHER_LEGGINGS\020\254\002\022\022\n\rLEATHER_BOOTS" +
      "\020\255\002\022\025\n\020CHAINMAIL_HELMET\020\256\002\022\031\n\024CHAINMAIL_" +
      "CHESTPLATE\020\257\002\022\027\n\022CHAINMAIL_LEGGINGS\020\260\002\022\024" +
      "\n\017CHAINMAIL_BOOTS\020\261\002\022\020\n\013IRON_HELMET\020\262\002\022\024" +
      "\n\017IRON_CHESTPLATE\020\263\002\022\022\n\rIRON_LEGGINGS\020\264\002" +
      "\022\017\n\nIRON_BOOTS\020\265\002\022\023\n\016DIAMOND_HELMET\020\266\002\022\027" +
      "\n\022DIAMOND_CHESTPLATE\020\267\002\022\025\n\020DIAMOND_LEGGI" +
      "NGS\020\270\002\022\022\n\rDIAMOND_BOOTS\020\271\002\022\020\n\013GOLD_HELME" +
      "T\020\272\002\022\024\n\017GOLD_CHESTPLATE\020\273\002\022\022\n\rGOLD_LEGGI",
      "NGS\020\274\002\022\017\n\nGOLD_BOOTS\020\275\002\022\n\n\005FLINT\020\276\002\022\t\n\004P" +
      "ORK\020\277\002\022\021\n\014GRILLED_PORK\020\300\002\022\r\n\010PAINTING\020\301\002" +
      "\022\021\n\014GOLDEN_APPLE\020\302\002\022\t\n\004SIGN\020\303\002\022\016\n\tWOOD_D" +
      "OOR\020\304\002\022\013\n\006BUCKET\020\305\002\022\021\n\014WATER_BUCKET\020\306\002\022\020" +
      "\n\013LAVA_BUCKET\020\307\002\022\r\n\010MINECART\020\310\002\022\013\n\006SADDL" +
      "E\020\311\002\022\016\n\tIRON_DOOR\020\312\002\022\r\n\010REDSTONE\020\313\002\022\016\n\tS" +
      "NOW_BALL\020\314\002\022\t\n\004BOAT\020\315\002\022\014\n\007LEATHER\020\316\002\022\020\n\013" +
      "MILK_BUCKET\020\317\002\022\017\n\nCLAY_BRICK\020\320\002\022\016\n\tCLAY_" +
      "BALL\020\321\002\022\017\n\nSUGAR_CANE\020\322\002\022\n\n\005PAPER\020\323\002\022\t\n\004" +
      "BOOK\020\324\002\022\017\n\nSLIME_BALL\020\325\002\022\025\n\020STORAGE_MINE",
      "CART\020\326\002\022\025\n\020POWERED_MINECART\020\327\002\022\010\n\003EGG\020\330\002" +
      "\022\014\n\007COMPASS\020\331\002\022\020\n\013FISHING_ROD\020\332\002\022\n\n\005WATC" +
      "H\020\333\002\022\023\n\016GLOWSTONE_DUST\020\334\002\022\r\n\010RAW_FISH\020\335\002" +
      "\022\020\n\013COOKED_FISH\020\336\002\022\r\n\010INK_SACK\020\337\002\022\t\n\004BON" +
      "E\020\340\002\022\n\n\005SUGAR\020\341\002\022\t\n\004CAKE\020\342\002\022\010\n\003BED\020\343\002\022\n\n" +
      "\005DIODE\020\344\002\022\013\n\006COOKIE\020\345\002\022\010\n\003MAP\020\346\002\022\013\n\006SHEA" +
      "RS\020\347\002\022\n\n\005MELON\020\350\002\022\022\n\rPUMPKIN_SEEDS\020\351\002\022\020\n" +
      "\013MELON_SEEDS\020\352\002\022\r\n\010RAW_BEEF\020\353\002\022\020\n\013COOKED" +
      "_BEEF\020\354\002\022\020\n\013RAW_CHICKEN\020\355\002\022\023\n\016COOKED_CHI" +
      "CKEN\020\356\002\022\021\n\014ROTTEN_FLESH\020\357\002\022\020\n\013ENDER_PEAR",
      "L\020\360\002\022\016\n\tBLAZE_ROD\020\361\002\022\017\n\nGHAST_TEAR\020\362\002\022\020\n" +
      "\013GOLD_NUGGET\020\363\002\022\021\n\014NETHER_STALK\020\364\002\022\013\n\006PO" +
      "TION\020\365\002\022\021\n\014GLASS_BOTTLE\020\366\002\022\017\n\nSPIDER_EYE" +
      "\020\367\002\022\031\n\024FERMENTED_SPIDER_EYE\020\370\002\022\021\n\014BLAZE_" +
      "POWDER\020\371\002\022\020\n\013MAGMA_CREAM\020\372\002\022\027\n\022BREWING_S" +
      "TAND_ITEM\020\373\002\022\022\n\rCAULDRON_ITEM\020\374\002\022\021\n\014EYE_" +
      "OF_ENDER\020\375\002\022\023\n\016SPECKLED_MELON\020\376\002\022\020\n\013MONS" +
      "TER_EGG\020\377\002\022\017\n\nEXP_BOTTLE\020\200\003\022\r\n\010FIREBALL\020" +
      "\201\003\022\023\n\016BOOK_AND_QUILL\020\202\003\022\021\n\014WRITTEN_BOOK\020" +
      "\203\003\022\014\n\007EMERALD\020\204\003\022\017\n\nITEM_FRAME\020\205\003\022\024\n\017FLO",
      "WER_POT_ITEM\020\206\003\022\020\n\013CARROT_ITEM\020\207\003\022\020\n\013POT" +
      "ATO_ITEM\020\210\003\022\021\n\014BAKED_POTATO\020\211\003\022\025\n\020POISON" +
      "OUS_POTATO\020\212\003\022\016\n\tEMPTY_MAP\020\213\003\022\022\n\rGOLDEN_" +
      "CARROT\020\214\003\022\017\n\nSKULL_ITEM\020\215\003\022\021\n\014CARROT_STI" +
      "CK\020\216\003\022\020\n\013NETHER_STAR\020\217\003\022\020\n\013PUMPKIN_PIE\020\220" +
      "\003\022\r\n\010FIREWORK\020\221\003\022\024\n\017FIREWORK_CHARGE\020\222\003\022\023" +
      "\n\016ENCHANTED_BOOK\020\223\003\022\030\n\023REDSTONE_COMPARAT" +
      "OR\020\224\003\022\026\n\021NETHER_BRICK_ITEM\020\225\003\022\013\n\006QUARTZ\020" +
      "\226\003\022\027\n\022EXPLOSIVE_MINECART\020\227\003\022\024\n\017HOPPER_MI" +
      "NECART\020\230\003\022\021\n\014IRON_BARDING\020\241\003\022\021\n\014GOLD_BAR",
      "DING\020\242\003\022\024\n\017DIAMOND_BARDING\020\243\003\022\n\n\005LEASH\020\244" +
      "\003\022\r\n\010NAME_TAG\020\245\003\022\025\n\020COMMAND_MINECART\020\246\003\022" +
      "\020\n\013GOLD_RECORD\020\320\021\022\021\n\014GREEN_RECORD\020\321\021\022\r\n\010" +
      "RECORD_3\020\322\021\022\r\n\010RECORD_4\020\323\021\022\r\n\010RECORD_5\020\324" +
      "\021\022\r\n\010RECORD_6\020\325\021\022\r\n\010RECORD_7\020\326\021\022\r\n\010RECOR" +
      "D_8\020\327\021\022\r\n\010RECORD_9\020\330\021\022\016\n\tRECORD_10\020\331\021\022\016\n" +
      "\tRECORD_11\020\332\021\022\016\n\tRECORD_12\020\333\021B+\n\036au.id.k" +
      "atharos.robominions.apiB\tMaterials"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_robominions_Material_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_robominions_Material_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_robominions_Material_descriptor,
        new java.lang.String[] { "Type", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
